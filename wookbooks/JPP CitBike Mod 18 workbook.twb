<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='202406-citibike-tripdata_1' inline='true' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='202406-citibike-tripdata_1' name='textscan.1that8617aah6i1931qyw13dl1k4'>
            <connection class='textscan' directory='C:/Users/Owner/OneDrive/Desktop/Data_Boot Camp homework repo/Week_18 Tableau/202406-citibike-tripdata' filename='202406-citibike-tripdata_1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1that8617aah6i1931qyw13dl1k4' name='202406-citibike-tripdata_1.csv' table='[202406-citibike-tripdata_1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='ride_id' ordinal='0' />
            <column datatype='string' name='rideable_type' ordinal='1' />
            <column datatype='datetime' name='started_at' ordinal='2' />
            <column datatype='datetime' name='ended_at' ordinal='3' />
            <column datatype='string' name='start_station_name' ordinal='4' />
            <column datatype='real' name='start_station_id' ordinal='5' />
            <column datatype='string' name='end_station_name' ordinal='6' />
            <column datatype='real' name='end_station_id' ordinal='7' />
            <column datatype='real' name='start_lat' ordinal='8' />
            <column datatype='real' name='start_lng' ordinal='9' />
            <column datatype='real' name='end_lat' ordinal='10' />
            <column datatype='real' name='end_lng' ordinal='11' />
            <column datatype='string' name='member_casual' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1that8617aah6i1931qyw13dl1k4' name='202406-citibike-tripdata_1.csv' table='[202406-citibike-tripdata_1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='ride_id' ordinal='0' />
            <column datatype='string' name='rideable_type' ordinal='1' />
            <column datatype='datetime' name='started_at' ordinal='2' />
            <column datatype='datetime' name='ended_at' ordinal='3' />
            <column datatype='string' name='start_station_name' ordinal='4' />
            <column datatype='real' name='start_station_id' ordinal='5' />
            <column datatype='string' name='end_station_name' ordinal='6' />
            <column datatype='real' name='end_station_id' ordinal='7' />
            <column datatype='real' name='start_lat' ordinal='8' />
            <column datatype='real' name='start_lng' ordinal='9' />
            <column datatype='real' name='end_lat' ordinal='10' />
            <column datatype='real' name='end_lng' ordinal='11' />
            <column datatype='string' name='member_casual' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ride_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ride_id]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>ride_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rideable_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rideable_type]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>rideable_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>started_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[started_at]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>started_at</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ended_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ended_at]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>ended_at</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_station_name]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>start_station_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_station_id]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>start_station_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_station_name]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>end_station_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_station_id]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>end_station_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_lat]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>start_lat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_lng]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>start_lng</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_lat]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>end_lat</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end_lng]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>end_lng</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>member_casual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[member_casual]</local-name>
            <parent-name>[202406-citibike-tripdata_1.csv]</parent-name>
            <remote-alias>member_casual</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Distinct Records' datatype='integer' hidden='true' name='[Calculation_1335317335287533569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([ride_id])' />
      </column>
      <column caption='start of day' datatype='boolean' name='[Calculation_1335317335295311876]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [started_at]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [started_at]) &lt; 12' />
      </column>
      <column caption='End Of day' datatype='boolean' name='[Calculation_1335317335296897031]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [ended_at]) &gt;= 12 AND DATEPART(&apos;hour&apos;, [ended_at]) &lt;= 23' />
      </column>
      <column caption='Start of day' datatype='boolean' hidden='true' name='[Calculation_1335317335298547720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [started_at]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [started_at]) &lt; 12' />
      </column>
      <column caption='Bike Count Start of Day' datatype='integer' name='[Calculation_1335317335300169738]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1335317335295311876] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Bike Count end of Day' datatype='integer' name='[Calculation_1335317335300464651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1335317335296897031] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Electric Bike Count' datatype='integer' name='[Calculation_1385419881966960640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [rideable_type] = &apos;electric_bike&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Classic Bike Count' datatype='integer' name='[Calculation_1385419881967706113]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [rideable_type] = &apos;classic_bike&apos; THEN 1 ELSE 0 END' />
      </column>
      <column caption='Traffic Count' datatype='integer' default-format='N' name='[Calculation_1385419881984237570]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([ride_id])' />
      </column>
      <column datatype='string' hidden='true' name='[Rideable Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[rideable_type]' new-bin='true'>
          <bin default-name='true' value='&quot;classic_bike&quot;'>
            <value>&quot;classic_bike&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;electric_bike&quot;'>
            <value>&quot;electric_bike&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='202406-citibike-tripdata_1.csv' datatype='table' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[end_lat, End Lng, End Station Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[end_lat, End Lng, End Station Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(40.75110165, -73.94073717, Queens Plaza North &amp; Crescent St)&quot;'>
            <value>(40.751101650000003,-73.940737170000006,&quot;Queens Plaza North &amp; Crescent St&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Avg' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Id' datatype='real' hidden='true' name='[end_station_id]' role='dimension' type='ordinal' />
      <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
      <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
      <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
      <column caption='Ride Id' datatype='string' hidden='true' name='[ride_id]' role='dimension' type='nominal' />
      <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Id' datatype='real' hidden='true' name='[start_station_id]' role='dimension' type='ordinal' />
      <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
      <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end_lat]' derivation='Avg' name='[avg:end_lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end_lng]' derivation='Avg' name='[avg:end_lng:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1335317335300169738]' derivation='Count' name='[cnt:Calculation_1335317335300169738:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1335317335300464651]' derivation='Count' name='[cnt:Calculation_1335317335300464651:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1385419881967706113]' derivation='Count' name='[cnt:Calculation_1385419881967706113:qk]' pivot='key' type='quantitative' />
      <column-instance column='[member_casual]' derivation='Count' name='[cnt:member_casual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ride_id]' derivation='Count' name='[cnt:ride_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rideable_type]' derivation='Count' name='[cnt:rideable_type:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ended_at]' derivation='CountD' name='[ctd:ended_at:qk]' pivot='key' type='quantitative' />
      <column-instance column='[started_at]' derivation='CountD' name='[ctd:started_at:qk]' pivot='key' type='quantitative' />
      <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1335317335300169738]' derivation='Sum' name='[sum:Calculation_1335317335300169738:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1335317335300464651]' derivation='Sum' name='[sum:Calculation_1335317335300464651:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1385419881966960640]' derivation='Sum' name='[sum:Calculation_1385419881966960640:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1385419881967706113]' derivation='Sum' name='[sum:Calculation_1385419881967706113:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1385419881984237570]' derivation='User' name='[usr:Calculation_1385419881984237570:qk]' pivot='key' type='quantitative' />
      <group caption='Action (end_lat,End Lng)' hidden='true' name='[Action (end_lat,End Lng)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:end_lat:ok]' />
          <groupfilter function='level-members' level='[none:end_lng:ok]' />
        </groupfilter>
      </group>
      <group caption='End Station Name Set' hidden='true' name='[End Station Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([ride_id])' function='order' user:ui-marker='order'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:end_station_name:nk]' />
              <groupfilter function='member' level='[none:end_station_name:nk]' member='%null%' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[end_lat, End Lng, End Station Name]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[end_lat]' />
          <groupfilter function='level-members' level='[end_lng]' />
          <groupfilter function='level-members' level='[end_station_name]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Owner/OneDrive/Desktop/Data_Boot Camp homework repo/Week_18 Tableau/202406-citibike-tripdata_1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/03/2024 01:07:53 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='202406-citibike-tripdata_1' increment-value='%null%' refresh-type='create' rows-inserted='1000000' timestamp-start='2024-08-03 13:07:41.308' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ride_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ride_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ride_id</remote-alias>
              <ordinal>0</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1000000</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rideable_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rideable_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rideable_type</remote-alias>
              <ordinal>1</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>started_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[started_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>started_at</remote-alias>
              <ordinal>2</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1000000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ended_at</remote-name>
              <remote-type>135</remote-type>
              <local-name>[ended_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ended_at</remote-alias>
              <ordinal>3</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1000000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start_station_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_name</remote-alias>
              <ordinal>4</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6492</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_station_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end_station_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_station_name</remote-alias>
              <ordinal>5</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4690</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_lat</remote-alias>
              <ordinal>6</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111145</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_lng</remote-alias>
              <ordinal>7</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109515</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end_lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_lat</remote-alias>
              <ordinal>8</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4808</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end_lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end_lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end_lng</remote-alias>
              <ordinal>9</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4736</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>member_casual</remote-name>
              <remote-type>129</remote-type>
              <local-name>[member_casual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>member_casual</remote-alias>
              <ordinal>10</ordinal>
              <family>202406-citibike-tripdata_1.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:end_station_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forsyth St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 30 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bleecker St &amp; Crosby St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; W 34 St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start_station_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;103 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;20 Ave &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;21 St &amp; 21 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 Ave &amp; E 163 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31 Ave &amp; 103 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 48 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;36 St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;39 Ave &amp; 56 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;46 St &amp; 25 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48 St &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;50 St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;51 Ave &amp; Van Loon St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;56 Dr &amp; 61 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;60 Ave &amp; Fresh Pond Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;64 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7 Ave &amp; Central Park South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;74 St &amp; Woodside Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;86 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;93 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Albany St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amsterdam Ave &amp; W 189 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bainbridge Ave &amp; E 198 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; 51 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabrini Blvd &amp; W 177 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlton Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Ave &amp; Weirfield St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton St &amp; 7 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;College Ave &amp; E 170 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crotona Pkwy &amp; Elsmere Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dixon Mills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwight St &amp; Dikeman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 11 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 138 St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 141 St &amp; St Ann&apos;s Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 171 St &amp; Webster Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 188 St &amp; Creston Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 2 St &amp; Ave C&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 94 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E Mosholu Pkwy &amp; E 204 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastern Pkwy &amp; Rochester Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Washington Ave &amp; W 183 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Washington Ave &amp; W 190 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Goble Pl &amp; Macombs Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Concourse &amp; E 205 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greene Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jefferson Ave &amp; Patchen Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jerome Ave &amp; Anderson Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kingston Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln Ave &amp; E 138 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Linden Blvd &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madison St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melrose Ave &amp; E 154 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morgan Ave &amp; Lombardy St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nostrand Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ogden Ave &amp; Merriam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parkside Ave &amp; Ocean Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Ave &amp; Vanderbilt St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queens Blvd &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riverside Dr &amp; W 148 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schenectady Ave &amp; Cortelyou Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Snyder Ave &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Nicholas Ave &amp; W 155 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steinway St &amp; 21 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tiebout Ave &amp; E Fordham Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turner Pl &amp; Coney Island Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 170 St &amp; University Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 35 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 47 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 64 St &amp; Thelonious Monk Circle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waldron St &amp; 108 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Walton Ave &amp; E 168 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Water St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;White St &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Windsor Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodside Ave &amp; 55 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10 Ave &amp; W 204 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;20 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;29 St &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;30 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34 Ave &amp; 45 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34 St &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4 Ave &amp; 17 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;43 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;48 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;49 St &amp; 25 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;55 Ave &amp; 90 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;58 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;62 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;69 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;71 Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;88 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;99 St &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 141 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albany Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bailey Ave &amp; Sedgwick Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; Beverley Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bleecker St &amp; Forest Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradhurst Ave &amp; W 148 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 153 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brook Ave &amp; E 157 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Claflin Ave &amp; Reservoir Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crescent Ave &amp; Belmont Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dean St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeKalb Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Driggs Ave &amp; N 9 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 167 St &amp; Bryant Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 182 St &amp; Morris Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 63 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 7 St &amp; Ave B&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eagle St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst Ave &amp; Forley St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flatbush Ave &amp; Lincoln Rd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Saratoga Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Concourse &amp; E 176 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hudson Blvd W &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hughes Ave &amp; Oak Tree Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jefferson St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kingston Ave &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenox Ave &amp; W 144 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lorimer St &amp; Calyer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marble Hill Ave &amp; W 227 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Motorgate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myrtle Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Onderdonk Ave &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Ave &amp; E Tremont Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;President St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Putnam Ave &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Dr &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roosevelt Ave &amp; 104 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sedgwick Ave &amp; W Tremont Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South St &amp; Pike St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Ann&apos;s Ave &amp; E 144 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stuyvesant Ave &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomas S. Boyland St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Van Dam St &amp; Greenpoint Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 12 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 145 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 233 St &amp; Albany Crescent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Webster Ave &amp; Ford St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willoughby Ave &amp; Onderdonk Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;100 St &amp; Humphreys St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;30 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;30 St &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;36 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;37 Ave &amp; 106 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4 Ave &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;44 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;51 Ave &amp; 61 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;55 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;59 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;62 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7 Ave &amp; 20 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;72 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;78 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;82 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;91 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amory Ct &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 152 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ashland Pl &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bailey Ave &amp; W 238 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bedford Ave &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boston Rd &amp; West Farms Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bridge St &amp; York St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 168 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buchanan Pl &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Catalpa Ave &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caton Ave &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park W &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clarkson Ave &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton Ave &amp; E Tremont Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crotona Ave &amp; E Fordham Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Decatur St &amp; Saratoga Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ditmars Blvd &amp; 76 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dyckman St &amp; Henshaw St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 1 St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 135 St &amp; St Ann&apos;s Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 149 St &amp; Eagle Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 169 St &amp; Webster Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 188 St &amp; Hughes Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 51 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 9 St &amp; Ave C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Engert Ave &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fairmount Pl &amp; Prospect Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forsyth St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gerard Ave &amp; McClellan St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gramercy Park N &amp; Gramercy Park E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Concourse &amp; E 196 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenpoint Ave &amp; 47 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hoboken Ave at Monmouth St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inwood Ave &amp; W 170 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Irving Ave &amp; Halsey St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kent St &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lefferts Ave &amp; Albany Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marion Ave &amp; Mosholu Pkwy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melrose Ave &amp; E 150 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Menahan St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N Portland Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New York Ave &amp; Hawthorne St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patchen Ave &amp; Bainbridge St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Putnam Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby Rd &amp; Albemarle Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rutgers St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sheridan Ave &amp; E 172 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Johns Pl &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thompson St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tilden Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 155 St &amp; Frederick Douglass Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 44 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 56 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W Tremont Ave &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallabout St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington St &amp; Barrow St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilkins Ave &amp; Crotona Park E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willoughby Ave &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Pier 61 at Chelsea Piers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;104 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;23 Ave &amp; 83 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3 Ave &amp; E 174 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;32 Ave &amp; 77 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34th Ave &amp; Vernon Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;41 Ave &amp; 67 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;44 St &amp; Greenpoint Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;47 Ave &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;57 Rd &amp; 59 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;60 Pl &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;61 St &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;65 Pl &amp; 53 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;77 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;96 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Ave &amp; E 175 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ave A &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford Ave &amp; Albemarle Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 192 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cauldwell Ave &amp; E 161 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Centre St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Concourse Village East &amp; E 158 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cortelyou Rd &amp; E 19 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Courtlandt Ave &amp; E 149 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cypress Ave &amp; St Felix Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 12 St &amp; Ave C&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 155 St &amp; Courtlandt Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 157 St &amp; River Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 17 St &amp; Beverley Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 178 St &amp; Monterey Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 4 St &amp; Ave B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 98 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E Tremont Ave &amp; Jerome Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fairview Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Freeman St &amp; Southern Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Ave &amp; 55 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich St &amp; Rector St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Halsey St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hart St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hudson St &amp; W 13 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jerome Ave &amp; Ogden Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jerome Ave &amp; W Fordham Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lorimer St &amp; Harrison Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacDonough St &amp; Malcolm X Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malcolm X Blvd &amp; DeKalb Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midwood St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nevins St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ocean Ave &amp; Tennis Ct&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pacific St &amp; Rochester Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect Ave &amp; E 167 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schenectady Ave &amp; Prospect Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southern Blvd &amp; Ave St John&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southern Blvd &amp; E 174 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steinway St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sterling Pl &amp; Ralph Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University Ave &amp; Morton Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 171 St &amp; St Nicholas Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 190 St &amp; St Nicholas Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 50 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walton Ave &amp; E 176 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Winthrop St &amp; Rogers Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;103 St &amp; Martense Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;111 St &amp; 49 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12 Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;21 Ave &amp; 80 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25 Ave &amp; 41 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 Ave &amp; E 170 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31 Pl &amp; Hunters Point Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 Ave &amp; 71 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;39 Ave &amp; 99 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;41 Ave &amp; 77 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46 St &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;51 St &amp; Hobart St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;56 St &amp; Arnold Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;60 Ave &amp; Junction Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;61 St &amp; 39 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;64 St &amp; 53 Dr&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;75 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9 Ave &amp; W 219 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;93 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amsterdam Ave &amp; W 167 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anderson Ave &amp; W 164 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Audubon Ave &amp; W 179 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry St &amp; Tiffany St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergen Ave &amp; E 152 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; Ellwood St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 48 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buffalo Ave &amp; E New York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll St &amp; Rochester Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Ave &amp; Woodbine St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cortelyou Rd &amp; Argyle Rd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crown St &amp; Troy Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dock 72 Way &amp; Market St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 11 St &amp; Ave B&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 144 St &amp; Brook Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 170 St &amp; Webster Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 174 St &amp; Longfellow Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 21 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 41 St &amp; Madison Ave (SE corner)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E Mosholu Pkwy &amp; Van Cortlandt Ave E&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastern Pkwy &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin Ave &amp; E 169 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 139 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goulden Ave &amp; Bedford Park Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Concourse &amp; E Mosholu Pkwy S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harman St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isham St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jerome Ave &amp; E 164 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kingston Ave &amp; E New York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Longfellow Ave &amp; Aldus St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Market St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metropolitan Ave &amp; 65 Ln&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monroe St &amp; Patchen Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morgan Ave &amp; Maspeth Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ogden Ave &amp; W 164 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pacific St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitkin Ave &amp; Grafton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect Park SW &amp; Greenwood Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside Dr &amp; W 153 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schenectady Ave &amp; Maple St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somers St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Nicholas Ave &amp; W 157 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Ave &amp; Maurice Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 165 St &amp; Fort Washington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 176 St &amp; Montgomery Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 35 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales Ave &amp; E 147 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterbury St &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;White St &amp; Moore St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Windsor Pl &amp; Howard Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodside Ave &amp; 69 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 38 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;100 St &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;20 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;21 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 Ave &amp; 61 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;36 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;37 Ave &amp; 113 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;40 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46 Ave &amp; Junction Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5 Ave &amp; E 135 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;51 Ave &amp; Alstyne Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;55 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;59 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;63 St &amp; 59 Dr&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7 Ave &amp; 22 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;72 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;79 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;92 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adams St &amp; 2 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 156 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 180 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bainbridge Ave &amp; Bedford Park Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beverley Rd &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botanical Sq &amp; Webster Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 185 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buffalo Ave &amp; St John&apos;s Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Caton Ave &amp; E 10 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park W &amp; W 97 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clay Ave &amp; Claremont Pkwy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crotona Park East &amp; E 173 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Degraw St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ditmars Blvd &amp; 79 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 10 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 138 St &amp; Grand Concourse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 149 St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 170 St &amp; Clay Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 189 St &amp; Bathgate Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 35 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evergreen Ave &amp; Noll St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Featherbed Ln &amp; Jerome Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Hamilton Pkwy &amp; E 2 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giles Pl &amp; Fort Independence St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Concourse &amp; E 197 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hancock St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irving Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irwin Ave &amp; W 232 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;King St &amp; Varick St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lenox Ave &amp; W 146 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison St &amp; Forest Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Margaret Corbin Plz &amp; Ft Washington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martense Ave &amp; 108 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Menahan St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagle Ave &amp; Ellwood St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New York Ave &amp; Lenox Rd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pacific St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paul Ave &amp; Mosholu Pkwy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pinehurst Ave &amp; W 187 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queens Blvd &amp; 56 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Rd &amp; Beverley Rd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scholes St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sherman Ave &amp; Thayer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skillman Ave &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Marks Ave &amp; Ralph Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stanton St &amp; Norfolk St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tinton Ave &amp; E 165 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 159 St &amp; Edgecombe Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 225 St &amp; Exterior St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 33 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W Tremont Ave &amp; Matthewson Rd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westchester Ave &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willis Ave &amp; Bruckner Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;114 St &amp; 39 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 125 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;25 Ave &amp; 96 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;28 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34 Ave &amp; Junction Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;43 Ave &amp; 111 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;43 Ave &amp; 42 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;46 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;49 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; 67 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;53 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;56 Dr &amp; 59 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;57 St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;61 St &amp; Laurel Hill Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;67 St &amp; Erik Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;87 St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 204 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;99 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 132 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Audubon Ave &amp; Fort George Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen St &amp; Troy Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beverley Rd &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Madison St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brook Ave &amp; E 141 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Ave &amp; Melrose St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Church Ave &amp; McDonald Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cortelyou Rd &amp; Albany Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cortelyou Rd &amp; Stratford Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur Ave &amp; Bedford Park Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ditmars Blvd &amp; 43 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 163 St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 165 St &amp; Fox St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 182 St &amp; Belmont Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 49 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 6 St &amp; Ave D&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edgecombe Ave &amp; W 150 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eldert St &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton Ave &amp; E 172 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glenwood Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Concourse &amp; E 167 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grand Concourse &amp; E 171 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hancock St &amp; Stuyvesant Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry St &amp; Middagh St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hoe Ave &amp; Jennings St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Keegan Rd &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenmare St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lenox Ave &amp; W 133 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MacDougal St &amp; Rockaway Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison Ave &amp; E 51 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple St &amp; Albany Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monitor St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morris Ave &amp; McClellan St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mount Eden Pkwy &amp; Eastburn Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N 10 St &amp; Berry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Ave &amp; E 162 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queens Blvd &amp; Albion Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;River Ter &amp; Warren St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sedgwick Ave &amp; W 231 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Southern Blvd &amp; Xavier Way&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St Nicholas Ave &amp; W 150 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling Pl &amp; New York Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sumpter St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suydam St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Van Cortlandt Park S &amp; Dickinson Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 10 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 146 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 218 St &amp; Indian Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 42 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walton Ave &amp; E 171 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Webb Ave &amp; W 190 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willoughby Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodward Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10 Ave &amp; W 207 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2 Ave &amp; 32 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;23 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;30 Ave &amp; 70 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; 21 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;34 Ave &amp; 74 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;36 St &amp; 47 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;39 St &amp; 47 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;43 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;48 St &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;50 Ave &amp; 65 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;55 Ave &amp; 97 Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;58 St &amp; 32 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6 Ave &amp; Walker St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;62 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;71 St &amp; 32 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;75 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;81 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;90 St &amp; 32 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;99 St &amp; 58 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albany Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bailey Ave &amp; W 193 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; Clarkson Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boone Ave &amp; E 172 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; Hancock St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 157 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Ave &amp; Beverley Rd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Calyer St &amp; Jewel St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarkson Ave &amp; E 37 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crotona Ave &amp; Crotona Park N&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ditmars Blvd &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 128 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 142 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 167 St &amp; Clay Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 17 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 182 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 54 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 7 St &amp; Ave C&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst Ave &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flatbush Ave &amp; Ocean Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forley St &amp; Lamont Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garrison Ave &amp; Manida St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Concourse &amp; E 181 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand St &amp; Samuel Dickstein Plaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Pl &amp; W 140 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hunts Point Ave &amp; Bryant Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jay St &amp; York St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kent Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Knickerbocker Ave &amp; Moffat St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 128 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcy Ave &amp; Hart St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McKibbin St &amp; Bogart St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naples Terrace &amp; Godwin Terrace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Pl &amp; Buffalo Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Park SW &amp; 16 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;River Ave &amp; E 153 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roosevelt Island Tramway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seneca Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sherman Ave &amp; E 166 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St Ann&apos;s Ave &amp; Westchester Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St Nicholas Terrace &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuyvesant Ave &amp; Hart St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thomas S. Boyland St &amp; Macon St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Van Dam St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Van Sinderen Ave &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 238 St &amp; Tibbett Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 54 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Walker St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Farms Rd &amp; Boone Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wyckoff Ave &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;111 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18 St &amp; 27 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24 Ave &amp; 92 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3 Ave &amp; E 169 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34 Ave &amp; 108 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;35 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;39 Ave &amp; 45 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;4 Ave &amp; Shore Road Dr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;42 Pl &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;51 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;53 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;57 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6 Ave &amp; 60 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;60 St &amp; 60 Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;65 St &amp; Otto Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;82 St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;98 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arthur Ave &amp; E 183 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ave D &amp; E 10 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beaver St &amp; Fayette St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bergen St &amp; Mother Gaston Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boston Rd &amp; E 178 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bronx Park S &amp; Bryant Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick Ave &amp; Harman St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick Ave &amp; Stagg St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chauncey St &amp; Malcolm X Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Church Ave &amp; E 42 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Convent Ave &amp; W 135 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corona Ave &amp; 102 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dawson St &amp; Intervale Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 14 St &amp; Ave B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 161 St &amp; River Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 163 St &amp; Tiffany St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 180 St &amp; Prospect Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 27 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 38 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 6 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eastern Pkwy\\t&amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatbush Ave &amp; Eastern Pkwy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frost St &amp; Debevoise Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Ave &amp; W Fordham Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Concourse &amp; E 164 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock St &amp; Malcolm X Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jerome Ave &amp; W 195 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MacDonough St &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macombs Rd &amp; Featherbed Ln&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macon St &amp; Patchen Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maple St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morris Ave &amp; E 171 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;N 7 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ogden Ave &amp; W 165 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Page Pl &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Powers St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pulaski St &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rogers Ave &amp; Lenox Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rogers Ave &amp; Lincoln Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sedgwick Ave &amp; Hillman Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southern Blvd &amp; E 187 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spring St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St Nicholas Ave &amp; W 137 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sterling Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Strong St &amp; University Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunken Meadow Comfort Station&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valentine Ave &amp; E 183 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Van Buren St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 133 St &amp; 12 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 211 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 25 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 30 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 40 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wadsworth Ave &amp; W 175 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Ave &amp; E 167 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterloo Pl &amp; Crotona Park East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willis Ave &amp; E 143 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 39 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;100 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2 Ave &amp; 44 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;20 Ave &amp; 42 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 Ave &amp; 84 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Newtown Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;36 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;38 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;43 St &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;46 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47 Ave &amp; 48 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5 Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;51 Ave &amp; Corona Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;53 St &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;56 Ave &amp; 92 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;59 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;63 St &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;72 St &amp; Woodside Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;8 Ave &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;85 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9 Ave &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;92 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amsterdam Ave &amp; W 183 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bainbridge Ave &amp; E 193 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bradley Ave &amp; Greenpoint Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Ave &amp; Lefferts Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick Ave &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Caton Ave &amp; St. Pauls Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park W &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clay Ave &amp; E 173 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crotona Park North &amp; Prospect Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ditmars Blvd &amp; 94 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 10 St &amp; Ave A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 138 St &amp; Willow Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 149 St &amp; Morris Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 170 St &amp; Sheridan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 191 St &amp; Bathgate Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 2 St &amp; Ave A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eastern Pkwy &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Featherbed Ln &amp; Nelson Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Hamilton Pkwy &amp; E 5 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;George St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gillmore St &amp; 27 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Concourse &amp; E 199 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Irving Ave &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Mill Rd &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerome Ave &amp; E Mosholu Pkwy S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lenox Rd &amp; E 43 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liberty St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madison St &amp; Malcolm X Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matthews Ct &amp; Coney Island Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myrtle Ave &amp; 65 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagle Ave &amp; Thayer St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New York Ave &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norman St &amp; Wyckoff Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paul Ave &amp; W 205 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Ave &amp; Greenwood Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riverside Dr &amp; W 138 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rutland Rd &amp; Brooklyn Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skillman Ave &amp; 54 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Waterfront Walkway - Sinatra Dr &amp; 1 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Marks Ave &amp; Rochester Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanhope St &amp; Fairview Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tibbett Ave &amp; W 234 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Townsend Ave &amp; E 175 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 160 St &amp; St Nicholas Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 163 St &amp; Edgecombe Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W Tremont Ave &amp; Montgomery Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington St &amp; Laight St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westchester Ave &amp; Longwood Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willow Ave &amp; E 133 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wythe Ave &amp; N 13 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;107 St &amp; 32 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14 St Ferry - 14 St &amp; Shipyard Ln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;23 Rd &amp; 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;27 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3 Ave &amp; E 109 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3 Ave &amp; E 189 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 Ave &amp; 57 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;32 Ave &amp; 81 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;38 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;41 Ave &amp; 80 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;45 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;47 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;53 Ave &amp; 62 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;57 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;6 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;60 Pl &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;61 St &amp; Woodside Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;65 Pl &amp; Woodside Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;79 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;97 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony Ave &amp; E Tremont Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ave C &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford Park Blvd &amp; Paul Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 138 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 220 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brook Ave &amp; E 138 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cedar Ave &amp; W Fordham Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Center Blvd &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Concourse Village West &amp; E 156 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cooper Ave &amp; 65 Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cypress Hills St &amp; Otto Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delancey St &amp; Eldridge St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 13 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 156 St &amp; Courtlandt Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 179 St &amp; Daly Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 19 St &amp; Beverley Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 44 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 5 St &amp; Ave A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E Burnside Ave &amp; Ryer Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eames Pl &amp; Claflin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fresh Pond Rd &amp; 69 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Ave &amp; 58 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Concourse &amp; E 144 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlem River Dr &amp; W 155 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Howard St &amp; Lafayette St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Ave &amp; 49 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jerome Ave &amp; W 177 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Knickerbocker Ave &amp; Hancock St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Linden St &amp; Knickerbocker Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Loring Pl North &amp; W 183 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macon St &amp; Howard Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manhattan Ave &amp; Devoe St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moffat St &amp; Bushwick&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morris Ave &amp; E 142 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New York Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ocean Pkwy &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pacific St &amp; Sackman St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect Ave &amp; Jennings St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockaway Ave &amp; Bainbridge St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seaman Ave &amp; Beak St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somers St &amp; Rockaway Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Southern Blvd &amp; E 172 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sterling Pl &amp; Rochester Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stewart Ave &amp; Johnson Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University Ave &amp; W 168 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vesey St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 192 St &amp; University Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 50 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W Broadway &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Walton Ave &amp; E 183 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warren St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wilson Ave &amp; Moffat St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winthrop St &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;108 St &amp; 39 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;16 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;23 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3 Ave &amp; E Tremont Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33 St &amp; 47 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;38 St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;41 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;48 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Av &amp; W 139 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;53 Ave &amp; 94 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;57 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;60 Pl &amp; Linden St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;65 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;79 St &amp; Woodside Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;97 St &amp; 57 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aqueduct Ave &amp; North St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ave D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benham St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bergen St &amp; Kingston Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 234 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 61 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick Ave &amp; Dekalb Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick Ave &amp; McKibbin St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Ave &amp; Covert St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte St &amp; Boston Rd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Church Sq Park - 5 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clarkson Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corona Ave &amp; 90 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dahill Rd &amp; 12 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 13 St &amp; Ave A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 158 St &amp; Melrose Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 179 St &amp; Southern Blvd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 26 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 34 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 5 St &amp; Ave C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E Fordham Rd &amp; Webster Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eastern Pkwy &amp; Ralph Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edgecombe Ave &amp; W 141 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fresh Pond Rd &amp; Eliot Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Ave &amp; Remsen Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenwood Ave &amp; E 4 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hazen St &amp; 20 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jerome Ave &amp; W 184 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Journal Square&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lott St &amp; Erasmus St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macon St &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manhattan Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mets Plaza at Citi Field&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morgan Bike Mechanics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;N 5 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Onderdonk Ave &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific St &amp; Thomas S. Boyland St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearl St &amp; York St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect Ave &amp; Longwood Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sands St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seaman Ave &amp; Isham St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South End Ave &amp; Albany St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Southern Blvd &amp; E 175 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Pl &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Pl &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University Ave &amp; W Burnside Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Van Brunt St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 180 St &amp; Ft Washington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 204 St &amp; Nagle Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warren St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warren St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Willis Ave &amp; E 137 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Withers St &amp; Kingsland Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;112 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; 43 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;23 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;25 Ave &amp; 85 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;34 Ave &amp; 113 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;35 St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;42 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;43 Ave &amp; 40 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;48 St &amp; Barnett Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; 41 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;53 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;57 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;61 St &amp; 60 Ln&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;65 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;7 Ave &amp; 40 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;75 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8 Ave &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;84 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;99 St &amp; 32 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arthur Ave &amp; E Tremont Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ave D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bergen St &amp; Saratoga Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boston Rd &amp; Prospect Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bronx Shore Comfort Station&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick Ave &amp; Linden St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Ave &amp; Himrod St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chauncey St &amp; Stuyvesant Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Church Ave &amp; E 45 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Convent Ave &amp; W 151 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corona Ave &amp; 111 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dean St &amp; Rockaway Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 165 St &amp; Clay Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 181 St &amp; Bathgate Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 48 St &amp; Tilden Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 6 St &amp; Ave B&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E Houston St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Echo Pl &amp; Grand Concourse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edgecombe Ave &amp; W 167 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton Ave &amp; E 168 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Concourse &amp; E 156 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Concourse &amp; E 166 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Halsey St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Herkimer St &amp; Eastern Pkwy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Icahn Stadium Plaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Judge St &amp; Britton Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Knickerbocker Ave &amp; Halsey St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexington Ave &amp; E 36 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macombs Rd &amp; W 175 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maple St &amp; New York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morris Ave &amp; E Burnside Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N 9 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palmetto St &amp; Traffic Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peck Slip &amp; South St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;President St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prospect Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queens Blvd &amp; 56 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;River Ave &amp; McClellan St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sedgwick Ave &amp; Hall of Fame Terrace&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sedgwick Ave &amp; W 195 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sharon St &amp; Olive St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southern Blvd &amp; Tiffany St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St Felix Ave &amp; 61 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sterling Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerfield St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suydam St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Van Cleef St &amp; 108 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 135 St &amp; Lenox Terrace Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 218 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 25 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wadsworth Ave &amp; W 179 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waverly Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10 Ave &amp; W 202 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;29 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;43 Ave &amp; 47 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;43 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;48 Ave &amp; 41 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;49 Ave &amp; 108 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;54 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;57 St &amp; Woodside Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6 Ave &amp; W 34 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;61 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;69 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;87 St &amp; Roosevelt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;99 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Academy St &amp; Nagle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 138 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Audubon Ave &amp; W 192 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverley Rd &amp; E 49 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; E 21 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Morris St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 142 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brook Ave &amp; E 148 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Ave &amp; Starr St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Church Ave &amp; Story St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Church St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coffey St &amp; Ferris St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cortelyou Rd &amp; E 34 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Davis St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Decatur Ave &amp; E 197 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 16 St &amp; Cortelyou Rd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 165 St &amp; Jerome Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 182 St &amp; Grand Concourse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 51 St &amp; Linden Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 7 St &amp; Ave A&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eastern Pkwy &amp; Kingston Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eliot Ave &amp; 60 Ln&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flatbush Ave &amp; Fenimore St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flushing Ave &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton Ave &amp; St Paul&apos;s Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Concourse &amp; E 175 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Halsey St &amp; Ralph Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; Remsen St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Home St &amp; Westchester Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India St Pier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kent Ave &amp; Division Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kingsbridge Terrace &amp; W 230 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Ave &amp; Ft Greene Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lenox Ave &amp; W 140 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marble Hill Ave &amp; W 225 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McKeever Pl &amp; Sullivan Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morton St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myrtle Ave &amp; Grove St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 11 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Slip &amp; South St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Ave &amp; E 179 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Perry St &amp; Greenwich Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;President St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sedgwick Ave &amp; W Burnside Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shakespeare Ave &amp; W 169 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheridan Ave &amp; E 168 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St Ann&apos;s Ave &amp; Bruckner Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stockholm St &amp; Wilson Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suydam St &amp; St Nicholas Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taylor St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Cortlandt Park S &amp; Gouverneur Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 144 St &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 15 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 230 St &amp; Marble Hill Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 27 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 54 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wards Meadow Comfort Station&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Webster Ave &amp; E 166 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West St &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodward Ave &amp; Starr St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;104 St &amp; 32 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;111 St &amp; 53 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;21 Ave &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;30 Ave &amp; 41 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;39 Dr &amp; 52 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;47 Ave &amp; 104 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;49 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5 St &amp; Market St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;50 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;51 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;57 Ave &amp; 98 Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;60 Ave &amp; Otis Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;64 St &amp; Woodbine St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 Ave &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;76 St &amp; 21 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;94 St &amp; 57 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amsterdam Ave &amp; W 172 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andrew Ave N &amp; Hall of Fame Tce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bay St &amp; Court St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bergen Ave &amp; Sip Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; Furman Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar St &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cypress Ave &amp; George St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeKalb Ave &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dock St &amp; Front St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dyckman St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 132 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 147 St &amp; Bergen Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 156 St &amp; Brook Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 174 St &amp; Walton Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 22 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 8 St &amp; Caton Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E New York Ave &amp; Troy Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frederick Douglass Blvd &amp; Harlem River Dr&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 145 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frost St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goulden Ave &amp; W 197 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenpoint Ave &amp; Monitor St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrison Pl &amp; Porter Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ithaca St &amp; Baxter Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jerome Ave &amp; E 181 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lewis Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lincoln Pl &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Longfellow Ave &amp; E 165 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macombs Pl &amp; W 152 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall St &amp; 2 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metropolitan Ave &amp; Stewart Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myrtle Ave &amp; Fleet Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau St &amp; Duffield St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nostrand Ave &amp; Rutland Rd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Old Broadway &amp; W 133 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parkside Ave &amp; Parade Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plaza Dr &amp; W 170 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Popham Ave &amp; W 174 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect Park SW &amp; Vanderbilt St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverside Dr E &amp; W 155 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S 4 St &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Schenectady Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Railroad Ave &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southern Blvd &amp; E 149 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Marks Pl &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steinway St &amp; 19 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union Ave &amp; E 169 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 111 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 168 St &amp; Ft Washington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 186 St &amp; St Nicholas Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 20 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 35 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 48 St &amp;  Rockefeller Plaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Walnut Ave &amp; E 136 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West End Ave &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Willoughby St &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyckoff Ave &amp; Cooper Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;102 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;20 Ave &amp; 48 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;21 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;24 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 Ave &amp; 17 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 Ave &amp; Carroll St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 Ave &amp; 86 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;39 Ave &amp; 54 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;40 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5 Ave &amp; W 131 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;51 Ave &amp; Junction Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;56 Ave &amp; Junction Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;59 St &amp; 59 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;64 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7 Ave &amp; 41 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;73 St &amp; 25 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;74 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;86 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;92 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 162 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 186 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bainbridge Ave &amp; E 196 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bleecker St &amp; Crosby St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; 49 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Ave &amp; Prospect Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butler St &amp; 27 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cauldwell Ave &amp; E 158 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Church Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crotona Pkwy &amp; Bronx Park S&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown St &amp; Rogers Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ditmars Blvd &amp; 102 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 141 St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 149 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 171 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 2 St &amp; Ave B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 20 St &amp; FDR Dr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 201 St &amp; Briggs Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Exchange Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Ave &amp; Summerfield St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Washington Ave &amp; W 173 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gerard Ave &amp; E 146 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gleane St &amp; Britton Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Concourse &amp; E 203 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greene Ave &amp; Grandview Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenpoint Ave &amp; West St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Irving Ave &amp; Palmetto St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Mill Rd &amp; 93 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kingsland Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard St &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lewis Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lincoln Ave &amp; E 134 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maurice Ave &amp; 53 Dr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melrose St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nelson Ave &amp; W 172 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New York Ave &amp; Snyder Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parkside Ave &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverside Dr &amp; W 145 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rutland Rd &amp; E 45 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S 2 St &amp; Kent Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skillman Ave &amp; Honeywell St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Southern Blvd &amp; E 142 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Marks Ave &amp; Thomas S. Boyland St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stevens - River Ter &amp; 6 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Troy Ave &amp; Linden Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 163 St &amp; Riverside Dr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 20 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 34 St &amp; Hudson Blvd E&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 47 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wakeman Pl &amp; Ridge Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Walton Ave &amp; E 151 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Water St &amp; Fletcher St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westchester Ave &amp; Southern Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilson Ave &amp; Troutman St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Winthrop St &amp; Albany Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10 Ave &amp; W 215 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;30 Ave &amp; 80 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;34 Ave &amp; 83 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;36 St &amp; Hunters Point Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;39 St &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;46 St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;50 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;55 Dr &amp; Maurice Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;58 St &amp; 56 Dr&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;62 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;71 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;77 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;81 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;90 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;99 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albemarle Rd &amp; E 21 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 131 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bailey Ave &amp; W 229 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford Ave &amp; Fenimore St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borden Ave &amp; 25 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brevoort Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 131 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 160 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Ave &amp; Snyder Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calyer St &amp; West St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caton Ave &amp; Argyle Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clarkson Ave &amp; E 40 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;College Ave &amp; E 169 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corona Ave &amp; 98 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crotona Ave &amp; E 179 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ditmars Blvd &amp; 48 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dyckman St &amp; Staff St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 117 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 133 St &amp; Cypress Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 167 St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 18 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 184 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 39 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 50 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Pkwy &amp; Brooklyn Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Empire Blvd &amp; New York Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton St &amp; Williams Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gerard Ave &amp; E 164 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Concourse &amp; E 184 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Herkimer St &amp; New York Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Intervale Ave &amp; Kelly St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson Ave &amp; Evergreen Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerome Ave &amp; Bedford Park Blvd E&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette Ave &amp; Hunts Point Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette Ave &amp; Stuyvesant Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; Patchen Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcy Ave &amp; Lynch St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Menahan St &amp; Central Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N 5 St &amp; Northside Piers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N Henry St &amp; Norman Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;National St &amp; 45 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Circle &amp; East Dr&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Pl &amp; Thomas S. Boyland St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierrepont St &amp; Monroe Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Putnam Ave &amp; Ralph Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rogers Ave &amp; Snyder Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seneca Ave &amp; Irvine St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St James Ave &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Johns Pl &amp; Kingston Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tiebout Ave &amp; E 184 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vyse Ave &amp; E 181 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 147 St &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 30 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W Fordham Rd &amp; Loring Pl N&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Westchester Ave &amp; E 156 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wyckoff Ave &amp; Jefferson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;111 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;17 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;24 Ave &amp; 87 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3 Ave &amp; Wakeman Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;35 St &amp; 21 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;41 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;42 Ave &amp; 108 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;45 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;48 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;53 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;57 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6 Ave &amp; 55 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;60 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;65 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;67 Ave &amp; Fresh Pond Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8 Ave &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;81 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;98 St &amp; 25 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amsterdam Ave &amp; W 175 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aqueduct Ave &amp; W 190 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ave D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bergen St &amp; Buffalo Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boston Rd &amp; E 167 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 238 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick Ave &amp; Forrest St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chauncey St &amp; Howard Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chester Ave &amp; 12 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congress St &amp; Hicks St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corona Ave &amp; 92 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Davidson Ave &amp; W Burnside Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Devoe St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 14 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 160 St &amp; Tinton Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 161 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 180 St &amp; Monterey Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 34 St &amp; Linden Blvd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 5 St &amp; Cooper Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 58 St &amp; 1 Ave (NW Corner)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eastern Pkwy &amp; Troy Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edgecombe Ave &amp; W 145 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fresh Pond Rd &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Ave &amp; W 181 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Concourse &amp; E 161 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grove St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jerome Ave &amp; W 193 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knickerbocker Ave &amp; George St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knickerbocker Ave &amp; Thames St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louis Nine Blvd &amp; Intervale Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McDonald Ave &amp; Vanderbilt St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morris Ave &amp; E 153 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morris Ave &amp; E 163 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Orchard St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pacific St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parade Pl &amp; Crooke Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Park SW &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Pl &amp; Howard Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Pl &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;River Ave &amp; E 151 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sands St Gate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sedgwick Ave &amp; Giles Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southern Blvd &amp; E 180 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southpoint Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Nicholas Ave &amp; W 134 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stratford Rd &amp; Beverley Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Troy Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valentine Ave &amp; E 181 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 181 St &amp; Riverside Dr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 204 St &amp; Vermilyea Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 51 St &amp; Rockefeller Plaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 84 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Ave &amp; E 163 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Ave &amp; E 174 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willis Ave &amp; E 141 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodhaven Blvd &amp; Hoffman Dr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;104 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11 Ave &amp; Prospect Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3 Ave &amp; E 172 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3 Ave &amp; E 81 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;30 Ave &amp; 47 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;32 Ave &amp; 75 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;36 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;40 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;43 St &amp; Skillman Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;44 St &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;47 Ave &amp; 109 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;52 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;55 Ave &amp; Center Blvd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;57 Rd &amp; 58 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;60 Pl &amp; 67 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;65 Ln &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 Ave S &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;76 St &amp; 45 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;95 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adams St &amp; Prospect St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alexander Ave &amp; E 134 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrews Ave S &amp; W 179 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ave A &amp; E 11 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beck St &amp; Leggett Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bergen St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; Van Cortlandt Park S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulova Ave &amp; Brooklyn Queens Expressway W&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Case St &amp; 94 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbus Pl &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cypress Ave &amp; Palmetto St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 138 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 153 St &amp; E 157 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 176 St &amp; Clinton Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 3 St &amp; Church Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 40 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 43 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 77 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E Tremont Ave &amp; E 176 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave (SW Corner)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Freeman St &amp; Reverend James A Polite Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Goulden Ave &amp; W 205 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Concourse &amp; E Mount Eden Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenwich St &amp; Perry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grove St &amp; Fresh Pond Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jerome Ave &amp; E 198 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingston Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lefferts Ave &amp; Schenectady Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln Rd &amp; Ocean Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Longwood Ave &amp; Southern Blvd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison St &amp; Woodward Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Main St &amp; Plymouth St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Metropolitan Ave &amp; Vandervoort Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ocean Ave &amp; Crooke Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific St &amp; Ralph Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific St &amp; Troy Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plaza St East &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect Ave &amp; E 151 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect Park W &amp; 20 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schenectady Ave &amp; President St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South St &amp; Broad St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St Mary&apos;s St &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steinway St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephen St &amp; Seneca Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stuyvesant Walk &amp; 1 Ave Loop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University Ave &amp; Macombs Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 190 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 36 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walton Ave &amp; E 153 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winthrop St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;100 St &amp; 37 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12 Ave &amp; 36 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2 Ave &amp; 36 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30 Ave &amp; 96 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;34 Ave &amp; 89 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;37 Ave &amp; 63 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;39 St &amp; Queens Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;48 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 Ave &amp; E 87 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;50 St &amp; Barnett Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;55 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;58 St &amp; Pier 4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;62 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7 Ave &amp; 17 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;72 St &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;72 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;91 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 151 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albemarle Rd &amp; McDonald Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 136 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ash St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bailey Ave &amp; W 234 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedford Ave &amp; Maple St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Borden Ave &amp; Review Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bridge St &amp; Water St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 133 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 165 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Ave &amp; Tilden Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caton Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;City Hall - Washington St &amp; 1 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clarkson Ave &amp; Troy Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crotona Ave &amp; E 183 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur Ave &amp; Oliver Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ditmars Blvd &amp; 73 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 1 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 134 St &amp; Walnut Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 138 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 169 St &amp; Fox St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 187 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 9 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave (NE Corner)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faile St &amp; Garrison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gansevoort St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gerard Ave &amp; E 165 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Concourse &amp; E 192 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Green St &amp; McGuinness Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greene St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Intervale Ave &amp; Westchester Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Irving Ave &amp; DeKalb Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lee Ave &amp; Taylor St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lenox Ave &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; Stuyvesant Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison St &amp; Cypress Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marcy Ave &amp; Rutledge St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Menahan St &amp; Onderdonk Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N Moore St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nelson Ave &amp; 167 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Pl &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pershing Field&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers Pl &amp; E 165 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schermerhorn St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shea Rd &amp; Boat Basin Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shore Blvd &amp; Astoria Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St Johns Pl &amp; Howard Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stagg St &amp; Morgan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sterling St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas S. Boyland St &amp; Marion St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tilden Ave &amp; Lott St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Van Sinderen Ave &amp; Truxton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 140 St &amp; Riverside Dr&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 148 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 17 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W Mosholu Pkwy S &amp; Sedgwick Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Whitney Ave &amp; Ketcham Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wyckoff Ave &amp; Stanhope St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rideable_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;classic_bike&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;electric_bike&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:Calculation_1335317335300169738:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:Calculation_1385419881967706113:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:member_casual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:ride_id:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[ctd:started_at:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1335317335300169738:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[avg:end_lng:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[ctd:ended_at:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:Calculation_1335317335300464651:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:rideable_type:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1335317335300464651:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[avg:end_lat:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='ride_id' />
        <field-sort-custom-order field='rideable_type' />
        <field-sort-custom-order field='started_at' />
        <field-sort-custom-order field='ended_at' />
        <field-sort-custom-order field='start_station_name' />
        <field-sort-custom-order field='Calculation_1335317335286226944' />
        <field-sort-custom-order field='start_station_id' />
        <field-sort-custom-order field='end_station_name' />
        <field-sort-custom-order field='end_station_id' />
        <field-sort-custom-order field='start_lat' />
        <field-sort-custom-order field='start_lng' />
        <field-sort-custom-order field='end_lat' />
        <field-sort-custom-order field='end_lng' />
        <field-sort-custom-order field='member_casual' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='end_lat, End Lng, End Station Name (group)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='202406-citibike-tripdata_1.csv' id='202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3'>
            <properties context=''>
              <relation connection='textscan.1that8617aah6i1931qyw13dl1k4' name='202406-citibike-tripdata_1.csv' table='[202406-citibike-tripdata_1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='ride_id' ordinal='0' />
                  <column datatype='string' name='rideable_type' ordinal='1' />
                  <column datatype='datetime' name='started_at' ordinal='2' />
                  <column datatype='datetime' name='ended_at' ordinal='3' />
                  <column datatype='string' name='start_station_name' ordinal='4' />
                  <column datatype='real' name='start_station_id' ordinal='5' />
                  <column datatype='string' name='end_station_name' ordinal='6' />
                  <column datatype='real' name='end_station_id' ordinal='7' />
                  <column datatype='real' name='start_lat' ordinal='8' />
                  <column datatype='real' name='start_lng' ordinal='9' />
                  <column datatype='real' name='end_lat' ordinal='10' />
                  <column datatype='real' name='end_lng' ordinal='11' />
                  <column datatype='string' name='member_casual' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action4_7B43335FB09846889CD5BEFCFEBD5B43]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='end staion map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <nav-action caption='GoToSheet1' name='[Action1_D220421968754B9EBC77A1C64AEB057B]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='end staion map' />
      <params>
        <param name='sheet' value='eletric /classic vs memebeship type' />
      </params>
    </nav-action>
    <nav-action caption='GoToSheet1 1' name='[Action2_DD02D0B100E24C8C98BA32F146A3EE9E]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Traffic map' />
      <params>
        <param name='sheet' value='eletric /classic vs memebeship type' />
      </params>
    </nav-action>
    <nav-action caption='GoToSheet2' name='[Action3_1C1CBA1110EB40349B011EB55EC1E5F7]'>
      <activation type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='end staion map' />
      <params>
        <param name='sheet' value='Dashboard 1' />
      </params>
    </nav-action>
    <nav-action caption='GoToSheet1 2' name='[Action5_CBF4466F1D86466496E351BC3A452E23]'>
      <activation type='on-select' />
      <source type='sheet' worksheet=' start staion map (2)' />
      <params>
        <param name='sheet' value='eletric /classic vs memebeship type' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name=' start staion map (2)'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Map based on Start Lng and Start Lat. The data is filtered on start Station Name, Start Station Name and Rideable Type. The End Station Name filter keeps 100 of 1,948 members. The Start Station Name filter keeps 100 of 2,148 members. The Rideable Type filter keeps classic_bike and electric_bike.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='start of day' datatype='boolean' name='[Calculation_1335317335295311876]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [started_at]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [started_at]) &lt; 12' />
            </column>
            <column caption='End Of day' datatype='boolean' name='[Calculation_1335317335296897031]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [ended_at]) &gt;= 12 AND DATEPART(&apos;hour&apos;, [ended_at]) &lt;= 23' />
            </column>
            <column caption='Bike Count Start of Day' datatype='integer' name='[Calculation_1335317335300169738]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1335317335295311876] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='202406-citibike-tripdata_1.csv' datatype='integer' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
            <column caption='Bike Count end of Day' datatype='integer' name='[Calculation_1335317335300464651]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1335317335296897031] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='202406-citibike-tripdata_1.csv' datatype='table' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_station_name]' derivation='Attribute' name='[attr:end_station_name:nk]' pivot='key' type='nominal' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_lat]' derivation='None' name='[none:start_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_lng]' derivation='None' name='[none:start_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Start Lat' datatype='real' name='[start_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Lng' datatype='real' name='[start_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]'>
            <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Calculation_1335317335300464651])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:end_station_name:nk]' />
                  <groupfilter function='member' level='[none:end_station_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]'>
            <groupfilter function='level-members' level='[none:rideable_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]'>
            <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1335317335300169738])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</column>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</column>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_lat:qk]' field-type='quantitative' max='4982785.6219184883' min='4969139.959797482' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_lng:qk]' field-type='quantitative' max='-8219579.0475881081' min='-8248728.0165528469' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#f28e2b' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='center' />
            <format attr='vertical-align' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='center' />
            <format attr='wrap' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='on' />
            <format attr='total-label' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='Bike end station' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' field-type='nominal' max-size='1' min-size='0.0151117' type='catsize' />
            <encoding attr='size' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='place-suburb' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.54000002145767212' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-temperatur-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[attr:end_station_name:nk]' />
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' />
              <size column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>End Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[attr:end_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of 202406-citibike-tripdata_1.csv:	</run>
                <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_lat:qk]</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_lng:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{392181C8-C813-426C-A758-13044D3840A4}' />
    </worksheet>
    <worksheet name='Bike type count end station'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='Electric Bike Count' datatype='integer' name='[Calculation_1385419881966960640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;electric_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='202406-citibike-tripdata_1.csv' datatype='integer' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
            <column caption='Classic Bike Count' datatype='integer' name='[Calculation_1385419881967706113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;classic_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='202406-citibike-tripdata_1.csv' datatype='table' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1385419881966960640]' derivation='Sum' name='[sum:Calculation_1385419881966960640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385419881967706113]' derivation='Sum' name='[sum:Calculation_1385419881967706113:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:end_station_name:nk]' />
                  <groupfilter function='member' level='[none:end_station_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk] + [federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk])</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</cols>
      </table>
      <simple-id uuid='{42B3F00B-C55A-4B91-9258-21A7D71F7BA0}' />
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='start of day' datatype='boolean' name='[Calculation_1335317335295311876]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [started_at]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [started_at]) &lt; 12' />
            </column>
            <column caption='End Of day' datatype='boolean' name='[Calculation_1335317335296897031]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [ended_at]) &gt;= 12 AND DATEPART(&apos;hour&apos;, [ended_at]) &lt;= 23' />
            </column>
            <column caption='Bike Count Start of Day' datatype='integer' name='[Calculation_1335317335300169738]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1335317335295311876] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Bike Count end of Day' datatype='integer' name='[Calculation_1335317335300464651]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1335317335296897031] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Electric Bike Count' datatype='integer' name='[Calculation_1385419881966960640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;electric_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Classic Bike Count' datatype='integer' name='[Calculation_1385419881967706113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;classic_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1335317335300169738]' derivation='Sum' name='[sum:Calculation_1335317335300169738:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1335317335300464651]' derivation='Sum' name='[sum:Calculation_1335317335300464651:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385419881966960640]' derivation='Sum' name='[sum:Calculation_1385419881966960640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385419881967706113]' derivation='Sum' name='[sum:Calculation_1385419881967706113:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1335317335300464651:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1335317335300169738:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Calculation_1335317335300169738])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:start_station_name:nk]' />
                  <groupfilter function='member' level='[none:start_station_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</column>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</rows>
        <cols>([federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk] / [federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0C8A55AF-67C1-4143-B8FF-AB511F55691D}' />
    </worksheet>
    <worksheet name='Traffic count by bike type'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='Traffic Count' datatype='integer' default-format='N' name='[Calculation_1385419881984237570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([ride_id])' />
            </column>
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Ride Id' datatype='string' hidden='true' name='[ride_id]' role='dimension' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1385419881984237570]' derivation='User' name='[usr:Calculation_1385419881984237570:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' included-values='all' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</cols>
      </table>
      <simple-id uuid='{1BD95B69-1B2F-4CC6-8031-CDDB7391DF4D}' />
    </worksheet>
    <worksheet name='Traffic count by memebship'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='Traffic Count' datatype='integer' default-format='N' name='[Calculation_1385419881984237570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([ride_id])' />
            </column>
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Ride Id' datatype='string' hidden='true' name='[ride_id]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1385419881984237570]' derivation='User' name='[usr:Calculation_1385419881984237570:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' included-values='all' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</cols>
      </table>
      <simple-id uuid='{C291908A-40EB-4EA3-BA8A-E931AB870EF5}' />
    </worksheet>
    <worksheet name='Traffic map'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='Traffic Count' datatype='integer' default-format='N' name='[Calculation_1385419881984237570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([ride_id])' />
            </column>
            <column aggregation='Avg' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:qk]' pivot='key' type='quantitative' />
            <column caption='Ride Id' datatype='string' hidden='true' name='[ride_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1385419881984237570]' derivation='User' name='[usr:Calculation_1385419881984237570:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' included-values='in-range'>
            <min>1</min>
            <max>6840</max>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]' field-type='quantitative' max='4996217.55677165' min='4954241.3591266368' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]' field-type='quantitative' max='-8169416.6183222607' min='-8259083.4202382341' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#f28e2b' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='place-suburb' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.54000002145767212' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-temperatur-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>End Station Name:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of 202406-citibike-tripdata_1.csv:	</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.18591159582138062' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='density-kernel-size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{96E38AE8-C330-4243-80EF-84CACE5141D8}' />
    </worksheet>
    <worksheet name='eletric /classic vs memebeship type'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column-instance column='[member_casual]' derivation='Count' name='[cnt:member_casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rideable_type]' derivation='Count' name='[cnt:rideable_type:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:member_casual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:rideable_type:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk] * [federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values])</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</cols>
      </table>
      <simple-id uuid='{F34D96CA-F556-4C98-8487-1230CC151427}' />
    </worksheet>
    <worksheet name='eletric /classic vs memebeship type (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='Electric Bike Count' datatype='integer' name='[Calculation_1385419881966960640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;electric_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Classic Bike Count' datatype='integer' name='[Calculation_1385419881967706113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;classic_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[Calculation_1385419881967706113]' derivation='Count' name='[cnt:Calculation_1385419881967706113:qk]' pivot='key' type='quantitative' />
            <column caption='Member Casual' datatype='string' name='[member_casual]' role='dimension' type='nominal' />
            <column-instance column='[member_casual]' derivation='None' name='[none:member_casual:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1385419881966960640]' derivation='Sum' name='[sum:Calculation_1385419881966960640:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[cnt:Calculation_1385419881967706113:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' value='29' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.83458560705184937' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</rows>
        <cols>([federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk] / [federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Electric Bike Count: </run>
              <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;member&quot;</value>
                    <value>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;</value>
                    <value>479596.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-158' y='25' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='133'>
            <formatted-text>
              <run fontcolor='#787878'>Classic Bike Count: </run>
              <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;member&quot;</value>
                    <value>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]&quot;</value>
                    <value>295324.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-7' y='-54' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='174'>
            <formatted-text>
              <run fontcolor='#787878'>Electric Bike Count: </run>
              <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;casual&quot;</value>
                    <value>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;</value>
                    <value>154438.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='24' y='-76' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='181'>
            <formatted-text>
              <run fontcolor='#787878'>Classic Bike Count: </run>
              <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;casual&quot;</value>
                    <value>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]&quot;</value>
                    <value>70642.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='16' y='-95' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1B09838B-8642-49F7-8BE9-33CB39699F7D}' />
    </worksheet>
    <worksheet name='end staion map'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='start of day' datatype='boolean' name='[Calculation_1335317335295311876]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [started_at]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [started_at]) &lt; 12' />
            </column>
            <column caption='End Of day' datatype='boolean' name='[Calculation_1335317335296897031]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [ended_at]) &gt;= 12 AND DATEPART(&apos;hour&apos;, [ended_at]) &lt;= 23' />
            </column>
            <column caption='Bike Count Start of Day' datatype='integer' name='[Calculation_1335317335300169738]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1335317335295311876] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='202406-citibike-tripdata_1.csv' datatype='integer' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
            <column caption='Bike Count end of Day' datatype='integer' name='[Calculation_1335317335300464651]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_1335317335296897031] AND [rideable_type] = &apos;station&apos; THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='202406-citibike-tripdata_1.csv' datatype='table' name='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_station_name]' derivation='Attribute' name='[attr:end_station_name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column caption='Ended At' datatype='datetime' name='[ended_at]' role='dimension' type='ordinal' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rideable_type]' derivation='None' name='[none:rideable_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column caption='Started At' datatype='datetime' name='[started_at]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]'>
            <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Calculation_1335317335300464651])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:end_station_name:nk]' />
                  <groupfilter function='member' level='[none:end_station_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]'>
            <groupfilter function='level-members' level='[none:rideable_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]'>
            <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1335317335300169738])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start_station_name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</column>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</column>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]' field-type='quantitative' max='4990529.9700737596' min='4966212.0663478822' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]' field-type='quantitative' max='-8219014.6365196528' min='-8266809.2558273701' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#f28e2b' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='center' />
            <format attr='vertical-align' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='center' />
            <format attr='wrap' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='on' />
            <format attr='total-label' data-class='total' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='Bike end station' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' field-type='nominal' max-size='1' min-size='0.0151117' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#efebe8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='poi-minor-secondary' value='true' />
            <format attr='enabled' id='poi-minor-primary' value='true' />
            <format attr='enabled' id='poi-main-monuments' value='true' />
            <format attr='enabled' id='poi-main-cemetery' value='true' />
            <format attr='enabled' id='poi-main-greenspace' value='true' />
            <format attr='enabled' id='poi-main-primary' value='true' />
            <format attr='enabled' id='poi-main-peaks' value='true' />
            <format attr='enabled' id='poi-rail' value='true' />
            <format attr='enabled' id='airport-label' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='place-suburb' value='true' />
            <format attr='enabled' id='place-neighborhood' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.54000002145767212' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-temperatur-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[attr:end_station_name:nk]' />
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' />
              <size column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>End Station Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[attr:end_station_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of 202406-citibike-tripdata_1.csv:	</run>
                <run bold='true'><![CDATA[<[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2413811683654785' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]</rows>
        <cols>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{D98F5387-4C5A-44C9-9A72-75D8E6D4E856}' />
    </worksheet>
    <worksheet name='top end of day station Elec/classic'>
      <table>
        <view>
          <datasources>
            <datasource caption='202406-citibike-tripdata_1' name='federated.0hqdapv1ru9xtq109bohc1jwadl8' />
          </datasources>
          <datasource-dependencies datasource='federated.0hqdapv1ru9xtq109bohc1jwadl8'>
            <column caption='Electric Bike Count' datatype='integer' name='[Calculation_1385419881966960640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;electric_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Classic Bike Count' datatype='integer' name='[Calculation_1385419881967706113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [rideable_type] = &apos;classic_bike&apos; THEN 1 ELSE 0 END' />
            </column>
            <column caption='Traffic Count' datatype='integer' default-format='N' name='[Calculation_1385419881984237570]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([ride_id])' />
            </column>
            <column aggregation='Avg' datatype='real' name='[end_lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Lng' datatype='real' name='[end_lng]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
            <column-instance column='[end_lat]' derivation='None' name='[none:end_lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_lng]' derivation='None' name='[none:end_lng:ok]' pivot='key' type='ordinal' />
            <column-instance column='[end_station_name]' derivation='None' name='[none:end_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Ride Id' datatype='string' hidden='true' name='[ride_id]' role='dimension' type='nominal' />
            <column caption='Rideable Type' datatype='string' name='[rideable_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1385419881966960640]' derivation='Sum' name='[sum:Calculation_1385419881966960640:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385419881967706113]' derivation='Sum' name='[sum:Calculation_1385419881967706113:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1385419881984237570]' derivation='User' name='[usr:Calculation_1385419881984237570:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881967706113:qk]&quot;</bucket>
              <bucket>&quot;[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Action (end_lat,End Lng)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_7B43335FB09846889CD5BEFCFEBD5B43]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:end_lat:ok]' member='40.744876339999998' />
              <groupfilter function='member' level='[none:end_lng:ok]' member='-73.995298849999998' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Action (end_lat,End Lng)]</column>
            <column>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-orientation' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='90' />
            <format attr='wrap' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='off' />
            <format attr='vertical-align' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='center' />
            <format attr='text-align' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='left' />
            <format attr='width' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' value='92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' />
              <text column='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[sum:Calculation_1385419881966960640:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Multiple Values]</rows>
        <cols>([federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk] / [federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{0138ECBB-49B5-4E6B-BA30-0D6B24C61236}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CitiBIKE2' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Traffic  from citbike </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='10' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Heat map for bike trips in NYC from CitiBike ' captured-sheet='Traffic map' id='1'>
                    <capturedDeltas>
                      <worksheet name='Traffic map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]' field-type='quantitative' max='5003741.6053017611' min='4923303.8694032067' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]' field-type='quantitative' max='-8183286.5147482203' min='-8267296.990880657' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Total bike type by membership type ' captured-sheet='eletric /classic vs memebeship type' id='2' />
                  <story-point caption='Traffic by meebership type' captured-sheet='Traffic count by memebship' id='9' />
                  <story-point caption='Traffic by bike typr  station' captured-sheet='Traffic count by bike type' id='8'>
                    <capturedDeltas>
                      <worksheet name='Traffic count by bike type'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
                                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
                                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;classic_bike&quot;</value>
                                <value>&quot;W 21 St &amp; 6 Ave&quot;</value>
                                <value>1466</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Strat of Day top staion Bike count' captured-sheet=' start staion map (2)' id='5' />
                  <story-point caption='end of day top staion by bike count' captured-sheet='end staion map' id='4'>
                    <capturedDeltas>
                      <worksheet name='end staion map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]' field-type='quantitative' max='4998915.695131381' min='4948871.5727654509' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]' field-type='quantitative' max='-8215658.7442925563' min='-8267925.6374444719' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='End of day staion bike count Dash borda' captured-sheet='Dashboard 1' id='3'>
                    <capturedDeltas>
                      <worksheet name='end staion map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]' field-type='quantitative' max='4990507.7506215367' min='4962660.7733804239' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]' field-type='quantitative' max='-8219354.8296586927' min='-8271308.1441129139' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Bike type count end station' id='6' />
                  <story-point captured-sheet='Traffic count by bike type' id='7' />
                  <story-point captured-sheet='eletric /classic vs memebeship type (2)' id='10' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{41286DB4-B9C9-4AEE-92A6-70183F5D7EC3}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97922' id='9' param='horz' type-v2='layout-flow' w='97538' x='1231' y='1039'>
            <zone h='97922' id='7' type-v2='layout-basic' w='97538' x='1231' y='1039'>
              <zone h='48961' id='3' name='end staion map' w='97538' x='1231' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48961' id='5' param='horz' type-v2='layout-flow' w='97538' x='1231' y='50000'>
                <zone h='48961' id='6' name='top end of day station Elec/classic' w='97538' x='1231' y='50000'>
                  <layout-cache cell-count-w='3' minheight='231' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97922' id='28' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1039'>
                <zone fixed-size='280' h='48961' id='3' is-fixed='true' name='end staion map' w='97538' x='1231' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48961' id='6' is-fixed='true' name='top end of day station Elec/classic' w='97538' x='1231' y='50000'>
                  <layout-cache cell-count-w='3' minheight='231' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2EBBF9EE-EE15-4B91-B6FB-957BB4D94591}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='CitiBIKE2'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{BF663068-2E59-4A3E-8616-48ECB45805B7}' />
    </window>
    <window class='worksheet' name='end staion map'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]</field>
                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]</field>
                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]</field>
                  <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[attr:end_station_name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>252</value>
                <value>40.733208626522426</value>
                <value>-73.975681364699994</value>
                <value>&quot;E 20 St &amp; FDR Dr&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335296897031:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{95C643BD-2FFB-4FC2-B1B0-514B827E1BE2}' />
    </window>
    <window class='worksheet' name=' start staion map (2)'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335296897031:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3732A305-FA1C-48CF-8333-02782627367C}' />
    </window>
    <window class='worksheet' name='Traffic map'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335296897031:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{F4BF9FA2-C9AC-465C-812B-D9FE3A139E9D}' />
    </window>
    <window class='worksheet' name='eletric /classic vs memebeship type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A24EF61-5DC1-42CD-A7A9-7D08ADD9C683}' />
    </window>
    <window class='worksheet' name='Traffic count by memebship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DF40CEE-9B0F-4333-9FF6-E6505108F6A3}' />
    </window>
    <window class='worksheet' name='Traffic count by bike type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[usr:Calculation_1385419881984237570:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27E40181-5B08-4AA5-807E-9FDF5B1C30E3}' />
    </window>
    <window class='worksheet' name='eletric /classic vs memebeship type (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:member_casual:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E964419D-CFA6-40C8-96E4-7FD5CFD93BB4}' />
    </window>
    <window class='worksheet' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Rideable Type (group)]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335300169738:qk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335300464651:qk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F30F5687-1CC7-4C94-98DD-27FBD5B48E11}' />
    </window>
    <window class='worksheet' name='top end of day station Elec/classic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[:Measure Names]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335300169738:qk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:Calculation_1335317335300464651:qk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AEA2BDF-078C-4DB1-97A6-529C743141E8}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='end staion map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[__tableau_internal_object_id__].[cnt:202406-citibike-tripdata_1.csv_0C6D204C38144F1C9CD041DE8E4B8DD3:qk]</field>
                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lat:qk]</field>
                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_lng:qk]</field>
                    <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[attr:end_station_name:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>269</value>
                  <value>40.744876339999998</value>
                  <value>-73.995298849999998</value>
                  <value>&quot;W 24 St &amp; 7 Ave&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='top end of day station Elec/classic'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{FBD45EB0-8093-43EF-A96E-7745CF47B5F4}' />
    </window>
    <window class='worksheet' name='Bike type count end station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[Rideable Type (group)]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:end_station_name:nk]</field>
            <field>[federated.0hqdapv1ru9xtq109bohc1jwadl8].[none:rideable_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{324CF4C7-0950-4432-B3F0-046B95946255}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' start staion map (2)' width='192'>
      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
      tP8HgtjqU/TXqpsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bike type count end station' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CitiBIKE2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9W49syXUm9q247J2ZVXWu3U022ZRESiJFUSRF60INBgYMGDBsP9nwg/0v
      /GbYsOFnA/Mw8D8wDL8aBvzgNwOaGRmiRVEipTEvIkcWJbqb6j7XqsrMvXfc/BCxYq8dubPO
      oQiRI+isg8KpytyXuKxYsda3LkEppYQ39Ib+ERIRkfp5N+INvaGfJ71ZAG/oHzUZ+cfTJ3+L
      Jx998PNqyxt6Q3+v9Nbb7+LxWx9bfLZYAB99+D7+4rvfwtXVg59pw97QG/r7ppubF0gp3b0A
      AODevYf4zd/8vZ9Zw97QG/pZ0Le+9bXVz9/YAG/oHzX91Avg/fffR/w7AKkpRXjvf9rXv6E3
      9FPRT70A/viPv3F2Afzou9/C//tkv/qdP97gG3/+3Z/29W/oDf1UdGIDAMDNsx/jz773V1B2
      h6/+1pfw53/+TRgAz1/e4DNf+Ao+8XCH/+dbf4qbKeLDZzf1vmn/HF/7k2/DWoMvfOk38Wff
      /AZu7j/H7Wd+Eb/y7j1889s/QAgen/3CV/DOhcV2uwWQ8IPv/Gt89PKAe2+9iy/8yi/gT77+
      NZC2uL494t/56j/BVa8BeHztD76GbrfDfvB4eLXB8+cv8fmv/C528Rrf+s5fwnuPz3/5t3AZ
      X+AP//yvsDUJu0efwBc/+4ugn814vqF/YLS6A/z+H3wdv/vVr+IXLo74o+++j3/z/e/jl37t
      N/BPf/uz+L//6M/xN9/5Bl7oR/jq7/w23nl4We/71h/+S3zi138bX/3d38bFpsOv/PIv4wtf
      /gq++LlPo798iC9+4fP4/K9+Ev/qX/4R4Ef84Ifv4/bDv8L3P/L4va/+Lq5/+G28fz3gB3/5
      Q/zGl7+CL763wx9/9/3y9Ii/+eAZvvybX0G8/jEefeqz+PLnP45v/dm/webqEb74hc/j1z/3
      Hn7/9/8Q0+1zHNUlvvrV38MH3/4Grt0bZ/cbWqeVHSDhbz/4Eb7x9a8jhgmP3lV43/a46Aww
      KhAS/r8Pn+PTX/kiiAigWbZ+6Z/8e/j6n3wdf+M9fuO3l0jS9775R3gaNnj7voJzrn5+++wJ
      7r/zHogIH3t4hY9eHNBtNrBaQZGCjNSw1kIrgjYG1hhQUEgx4Tt/8od4Tvfw9pWG9/nZXdeB
      iPD2lcGLY8J9+2YPeEOntLIDEN77+Dv4xGc+i8/98mdw72p7csVnfvET+NNvfhu318/x0bPr
      +vmTJ0/wa1/6Tfzy2x2+99dP8eDxA3z0/t9iGEd8+NET/MIvfRoWHl4YDY8+9Rn8+Pv/GvvD
      Ht/50TN8+mP3f+JOfPjhM3z605+GSRN8WTD7/R77l8/wgxeET169Yf43tE4kg+G+++0/xY/f
      /2t86Yu/he9/73vA5j5+9dOfwpMnH+Gdt98G4oQPnx3wzlsP8NEHf4MPbxzeenCFt99+G4qA
      FDz+4nvfBW0f4Fd/6ZMgAv76L78P393Hp999iG9/+3t4+71PAS7incdX+PDFLd55/BDHm+f4
      i7/8ET792c/h3rbDhx/l97njDW68xaOrDYCIDz98hnfeeQsvnj7B7v5jqHjE9T7iwZXFt7/z
      F/j4p34J0U3YTB/i//jTD/D5X3wXn/u1z2Jj9c9xiN/Qvw30rW99DR979xfwa7/+lfoZEdHq
      AviH7gg7PPkhvvNU47c+997Puylv6N8SOrcAVlGgf+i0e+sX8Vtv/bxb8Yb+IdDJAnj58hm+
      /vV/8fNoyxt6Q39vdDjs8bF3f+Hk88UC+Pi7n0Lfb35mjXpDb+hnSQ8fvX3y2cIGGIbhJDyB
      v06IICgQEWKKIBCIqH6vlDq9p0k2IwGZ8u93JaSFEEBEi5/XpZQSQICPDhrm5P6UEmKMCABs
      aXtKadGPn+hdzf0hhNX+8/ey/2v94r4rpRBCqPeEEGCMweQcIhKUSuh0v3iHfGZKqd7Ttle+
      P8aARAk+RBBpWK2RUkKKMfdLZ8hZl8/X2sxjyu+KMZ6dMx4rbou8LkQPH311XhJpKFIAErRa
      19pbnpPzHUKAUgqbzWYxDic2AHeMGxZjBCg/MKYIqwojJSqfzROuGiZKKSIIuJOISieWjeNB
      apmFJ2673cJ7vxj4c4PPz+E2+OQRERAR0NMGSqnFoDBpreGcg7UWADDFEZ3qX2vB8fuICN77
      RX/avmmt61hxP/iadnHupwkXXYcYI8ZxrG0DAO89DuOIZBwsKWz1rk6yfD5fq5Sq714TTkQE
      Hx1C8ji4CCCPjVEKRmtoIiDEzA+lH1Io8Vzxs7TWiDHWd/LnzjkYY+p48XVt/10cMcURBAJS
      gtYdLCxIL/vWzgH3Pca4EGT895qwXV1OPHkJCQAhIVWJ35KUOHL1JbFDEBG0mifg3HPa9xur
      cfR7aNLwHjDG1M7I62OMC2nD/xsyUJowhgEsTiJLNKXgvYe1tkqtEAIi+Tzwr0FysTnnEAsj
      qEYKc5vO7S5rY8LCRWuNly9fYpomaK2htcbt7S2o67DbWFht6vPlggKWO+iahJSMEVOECwnS
      NeRjhC/jddVbaK3RdR2maaoMzoKJx7Xv+7pQ2jmSO8M5gZZSQoizcGL9g4hglT3Z3eQz5EKQ
      z5P/t3QyIzHGuQE8WAA0mZNJko0/2e6RJb4iBa30ydZ8jha7gSoThYhEsU4YD7aUPMYYKKXq
      D7dJkcbG7E7amhdpQkqhMoHWGpQ0rOpe2U452NyGFCOSeP7a5N7ZX0EuBDzd7+FCwGazqe1L
      KcFaC2stOr1FpzcLRpa7dyuF2/fK95NScGH10nLtrBkYY7DZbKC1xjRNefE3ux0LKSmc5PwQ
      EXxwmMJY55PHaNtdQJMGkLIgIAUSbZYLrlWR+Tn8/V3SH2h2gJlBE1LKkwlugBgw7phu9Nn2
      d/n3XerLWRJtDvBApDqQcuts9er2vflvVZlWaw3vPUgBLowAEowqO4Fe32VOmib6w9I5hHB2
      71jTdeVz1mhrLQbncLHbwXuPm5sbKKVweXmZQz1AQJoluXw+qxssjSXJnYLbNXkAd+x8BIJS
      y8VMROh6C+9CfZ73vtoqUjPgz3hBKKWQKEFrVRm0Lh5SuOivsB9vEOCK9qEWfXmVrdaqoefG
      +FQFIiDFVLqcAMFki62neZFc+a1+2W7Na41d7UD7mcZCD5V6+7nnyoHg9vFnSmmE6JGQsrFc
      djm5wNYGWjKz9x7GmKrTOudgVnZFrXV+Fi3bxQuyfTYAWK2xH0f4EHD//n0YY9D3PZTWeHk8
      4uFuV/s1jmPVzZn5menWdgF+bwgBYwiY7sjNqAuFZrvNGIPJDyCaJXrXdfV9kieICC6OICh0
      pqvj6+IEpCxAgBzrVdUaEHqzQ8L+RLWV43RO5eExDmUHXRMEwFosUMIc4EZZjYkpYAwDYgr1
      Ja20be0A2bApjKsvX9V9m4XC+inKwPDEMvOv6X13vatKoxihSaPXW3S6h4JeSFH+vR04qXfK
      9saUEAFsrK2M2JJPLjOCWJRS+uW+JhymCYoIRmtc9D1uyiLQWsMYA9cwq9a6CgLn3InxKeek
      1f0B4FgY8BxZXVQQsOBQCDFkFbKoTS3K1PKDixNcdLXfIQb46ODSCOgEbXRdCPMzgMv+HhT0
      woiXKrCU7mwzMXL2Oir3yQ5AlC3vRKiqD/8Dik6XUlV/ZIPXiKWr0hoa+uQeOUizZJ6f3eke
      mgxiihVF4sljhGPR9rU2lGfK++rApVMml8+Suqb8TkrXLLEArVQdF6mHhxAAyvDexm6r7dIi
      M74gOTElGJWZrjMGV5sNphCgALw8HuFDwK6foU9maMmEEkaVf8v2xxhxLMb7XdQpDVPaKiFV
      RQpUpDkvwPMMR7Bk6xyH5CrYEKKHh6s7UggB2phsgybWSJYCs92ZT2xQohPVao0WC4Af7mOA
      VrNE1GRgKEvbiMz8ax1tpWPuNqHXdzvXpjAiIcIoC8IshTWZih5lo2hmLGZoZjBpXK21iZmt
      Doz3CDHCsO5+Rg1rjXe5QGOM0EUix5TQCckvVSkA0EpDYwOCMLjLIuLn3owjjFLorcXBe/gQ
      YLRGZwwUgEiEXVkgfYET5bMkSTVOMoBzDl3XzWP/irRUqzUQI7RQbwAgIiBFgtazsSt3FZbC
      PFadyoIMyEIxpFAXAIHQ6U32M9gsUKZpglKq7gpS0t/F0Dwma/6WNVoso7oNI1R7aLHdpwS1
      YlCcYzomrQwU6bONsCobdC5MC6ZBEg6rIhlaFUkpVVUhxuHle1pMmO9BShXi4z609/LnrQoB
      oPomqHx+GEeEFWnD7csLYinx+fkhxnpviBFWa4TSPibW641S6Bv9/tzilePG6gGrkNyO+7vd
      6pwwGSFoFsItAUBuu7Sr5LuZaVmYzXZPzA+gDE50egOk2U8SY0RUWS3i3cY5h3Ec78wjb+2O
      td9P+rc2cJ3KDYppCTVJQ6h98Rq1uvxdu4bcPRhXb6WpvD82zMuIh9wNzhFLCF907tbAl22X
      6gKTc27xDqM1rtjQWjE4F+DBygIDAEWEy76HVgqqfDZ5j421VWXL0MQsFO5CNwCcQMKSvPdw
      cYRP68YhkxFjW41bylEBCREKs0rqQpbWCt1CCrfv1spgqy4Rol/17B7cAb3Z5B2C5vnlZ3FC
      FUPfa4yfUoIXzs5z/LD4lAeUpQX/MGPdNeCtpc7/uzhVv8KaFQ/kcIWYZskupbZUXRYNbwaX
      /2dd1Hu/UG1a5uNdoHWgSfVGbuft/fJvrRRAhPEVSIrE6pd9yQvMFPXmdhyhkKUvAEzTBFsW
      QniNSeX28+7QqnCiVfDh/AKwWhdP7CyZ+RmEbKTXz5Dg4lTh5FaotAIlj5s5+dx5ByIFq83C
      rpHzz34QVpXk+6S2ciyCo71f0ivDoXniRjcgIaE3m1UDZM1ITIjZAC6OsNZDyJNjdQeVFBTN
      +rjWGsMwLPTVtbYBS+8ugIV+HRjObBav1hqqeG3PPbdVVXhnkossIi+AlBIuN68XSLi6EyJh
      8h5DsSfubbdQRBiGIYcP5BuRgApCnIP21nZkuRAYPLDocGR1ZIWMono9hzCEGGZ1lg3a4AEQ
      er09WXDy/RUxa3YvnruMgkX0pjtRW6SE52cYY+ruxLaCMSb7eULAxhikEDBNE0IIuLy8REuv
      lQ8QY4BPHp3OzMhqxloHFh1PWZ0y+hQia6/VZE46zOEKd23za7sKD1KdtBAQlaoSla9JK/ZB
      +1z5TNb7mWr4RAjwhSlTc7+kamOVYEJJighHnxGZi76HIoIXW70vjkdeyHeNSWz08jUDPqWE
      0ftFvJZsp9YKpggiOQ5Gz8a3L2qqjx6KNLTSJ36HdoeWKvUahZCqQGFau172jQPdvPeYpmlV
      AEiEbPF5+8GaQTv6EUTzlrW2is81zjQ6XmvAtkzPeiY3uo1kXCP5Pp4cFx2sspURnHNwAq47
      5yBaey63bWELFfIFFu5WvNGSWHc1xiDEIPAPQozZFjFaIfiA3hg459D3PcZxzLq8eP9dzN/a
      MHJc5OexhG2skVIRl10PSvk+FiR8vzSIM2RLJepW36n+8P3nhAO3SaqiTO2irtc3aixrDCkl
      +JRWnZKSTjirXXk+OEQEWNXVkNQpjDC6Q4qpqiytpGl13ew4yVBnHcgUcfS3UNAgKPRmc2LQ
      vM4CqJOMlCMJg8vIgvjOWAukhHEc0XVdlubmNL6pJf6eA+ckQ4XiQe0sIVICQoILAZ0xOYJS
      UA28S6k6G1NK8MI+IqLK/F3XVebjsJNQFttdYRrSfpI77cn8YB0CTYi46nukkGDsaVjzAlot
      n1ndQ1HAFEZY3S3UXTmfr4rkLAOx+j2jP9K2YVVZxj9JAT0MA+6VOKrXsgHkgFGdIA+jLUyR
      /mMYERExuQG92Z7EfsvdQZJ0fEiVyaiueHrz4MvYlrtgPtnmPG6EwR1hlcXGGFhtF+1IKUO4
      m80GwzBkPfrsU5fPl4tQtmX0HooIzieQ9rDKwiSNECN8WQh1bGQcDT+XJWn53GqDFCNQGIV1
      9XPS666x4L8l80smvi2wbUtGaVBU0EYvIjhlG9jx5ZyrqBRRdqBKY7Rt9xp/STXGew+rFIL3
      iMXYV0qBFEBqDsiU/Vjr99wXhQjcqereKVp9cAgIUIkwhgAdNUIKAAhWzVtNOwFrFFNEr7eL
      1ahIodebHI+SjhjDAEN5p2GD8y4jmI2ykDh+3cBou9oWXRZUhdC0hncOamW7XbS7MEFrE8SY
      Q4UvNxsQgDEO1X9CUcEKRxUvAB/8zBgZBi87V25fDBERwHEcq43CjMj6ypoE5c9b6c//tyrJ
      5D1cWA/93Jp5h65Mivx+PlBolbGRTiKG5Vy34yfzB1jIVLW0sddciAjJw5Rw6LVxaIkoo1Sv
      Eh5nZz7r0UsvXJ6enBAjV3CIYbHi140WdVYqhOTr72MYFlLvVdJ/imP1TLN6JQcByLj9MI5w
      3ucQj+IQYsPpVc6VdbvIY9d1vKcBBU+PCICaw7RPpH9KQDUodfX0xhBhrIGPOYZlP471/owR
      ZeNQMnOrashxX2M+fp47gx5trAWlVNWvGrYcZ58MCwSJQKWUSrbYadbZufGTcTtso3VdB601
      Rpdh8RCzWhWiX/DD2u/te4EcUh5qO1/DE8wPzQ/OBomSL0n5R5MuMUERUbi0WW1pKaUEq7pV
      BCClLDl0gda2Zlsn9i7dX0omoyw63Z08l22IiJgTXVRCZ2yuKieMJiLCOJ4G7L3KUOa4n5A8
      5HFrESEjZ4waNWMvjdngQ2X+EAI6rSvaU2OXQhE8ZxipNQSl6rOww0JAAlb9FUopWJqdXlII
      peL1bd8LyjO/vHb5f7v41hbqNE3YbDb1M6s1ro8HjP5Yo3VTmiH01qaR48o0OIfBuYIoRYx+
      OOkzcMYRlpmLsDE7aNJQpKGgkJCg0IRFp+X97DhrjWmOJFzdwomgqcvvU7Pe/Cpvro+++hpO
      nlnIew9Qhh07s57myNGUx+NxsYBbBkop4ThNGJ2DDx4cFM4q2Nzhud/5l6Vhr1V2MAUfKsTp
      Q0AUujQbvcfJAaCT4MP6KtEfuSu348C/D2d2u60xZRdrjMkUqv13DuJskR92nEoVUIaXS/4Z
      hmER0p53coXLfovJESbHqZgZbpV9kxpIiHOYDM9TTsudAJzOOdPqqC4ny8Aog05voFOO6WFp
      xIzdToLcmmVjAeD58+fY7/c4HA6LCTJa12jPlBL2+33V11NKOBwOAHLJQ15IvDXHlgGxZAwf
      fUUnzlFKqapEvBu0/RhK5KTRCkmNOLgbTDE7COUY62QAEIzNUaw8XoqKnh8jrDVQWpUo16Xk
      jMUwZmYz+jSGqBUm5wzf+swSb7QW+mwYZtWqtrXuoGl2fElfjxRyrV8IgEBnlpJbtp8dnWuq
      jFYK93c79KbH5AiDC3BhxOiPiCKLD8gI4+R9DZtwIWQDnyJeYSqsw6AVyQGqXp1Xl1o88Jye
      2UZpSnWEY3xY7ZBbIseyK6Uq/s0Mr7XGixcv4JzDdrdDTAk7e7nK1ItJAtCrbY0qXSO54Dmp
      YxiGOYmFB0tnhIcUzUxPWDi1FGlEn3NjczsAgOBdNoCzUZt3TjYepQGbPwN0US8uhWog29sa
      vOfUAhY+SincHI+r/e+NAZDKzrQM/eAdX3qD2/mWoRIV4CjPmNIISgqd6hdMzon+7Q7bGu+b
      rkNnDF4cDgViJkxhRFdSbrMKrQEVcTsM2HV9XeRzGP9PAIMyzqooOzm4eRnvz4+V1G5rTLwI
      2u2REZXW0CUi7Ha7akd0pSICQ4FKqRovD2CBErR9WPSliRFZu14yE6txDMs556qRTETolEJw
      AVu6BCgzuFSBKBGUQB8UaYzjCGPNQh1oQzCs1khAdtaVKFOUOdAr0pPHlAWNrDghFwRfy2pW
      S0ZrqFQw/5SZmUGNPOdqsTiltGYbEZjtJbkIY+KklCY5xjlsNrOfRvap/YzHfdt12I9HEHko
      UhgxwJCpAlqX+KGbYahRtFk7iCDos+VUVj3BElmIRSJxZYjltfPva5KBmZm/M8bgwYMHCwlD
      RDnbSTCg1EEvLi7q5yHmzLC1+J22D7UftMSb77q+/ZsXHks+hjF9iOitRQgB3vmMfqgc444I
      aFGMd5om2M4uVKmQElTKTq2YUvUEJyQ4H3BRokLX9H7J1LyYssfcg5TKtprQzdmPMji3ioP0
      WoN4F6MZlcsFDU6TYGofSv5zojkFk9tXdwHS6HS/4I1pmtCXZJ5zCI5Usfj33hgcJo3RRaQU
      oShCKYeHu4JYkUJKfhFCHhNhCh5bqxFcAnqc0ElCjGSEEAJI5cykFjhLSGWQ7mbGOlHIobVS
      0lap0Cwe7z26vivY89K7fM4YXKMYI0hTNdTXgrBaY7s13nMOQobTRufRF71+Pwx5e+adynnY
      rofzDl3p1zRNMNZgdDm5xRUUJtPScGfaFiiydUC1Bid/xpLfJw+KOfEmpNxmxuWvj0dMK9Lf
      ag2KEaaz9Vm8ADq6KOhLWtTv4fdSUdFSStUp5r2vzM3Xs4QOISy+Z1VvwQeCpEONBWZnDIai
      QicAzOt8fwuaELIPwepQE61aWiyAmCLGcESn+5ydRUvMlSnEUKC6JSa9Rjn7x0MljbSiiuTF
      EWvGVwgBpAkHtwcB2Ohd2cpend+5Ri64HFqszUl/pP0BoBhsy9IeSqnKCPy51RqBIo7jCKM1
      emtr3A7vktM0QRuD22HAVEKOWW0jsNGfJ3J0OVfWGoONtXPIw4pAkqpPtZ3ClNsYkXcplaWv
      1hqDc9Xj3FKndTHA5/GICFXyS5UYBExhgIbN0HPdFQMczYGHnJwvFzCrkJL5D9NUc58VEWzJ
      f5b9lX3ktiyICEfnstAggqaMIM27ACFGhdEFdPo1bAAge2c5dW2hwvD2WKBHQ5sT5s8JNBGK
      5vCFED1cnGCpB8Iyvr9KNXiEqGB1VitsZ8BoXUgeCma12NTrUIYT/UJv5sFspYaLDgkJlrql
      fQKCjxGyLIhWCmQJYzFuO2PQdR2GYcjQXtfh+nCAL5Jr13U5z1eoZCnl2CGtFLrCQM57RCLo
      NMfaADhZuBKVyTBwylllfsK22yJRwuAc9meiI1n6684iReH0Cq76bOSuEBGKwZ6dmjXXgu0a
      rWFLKHIoIcjcVjZ2U8oolMxDZjXQF8Disl+WeQRmr3u7i6WUHYaHacpayko/AYILWTBcrSS/
      nahAHNPNf3OHaoNI5yqhdLqlTH5ASAFbe1ElodUdtDJIaZlkwh3IDJYh0FmXnN/PHtC/C/Mr
      pRDYQ5siFJZ2xknUIgghekAvnVUpJVitMUyu0XEJG2swlfzdy+22jpkrOvfGmBMkJ2EOibZF
      SrMESymHKuiy63GNzlYPb6W/CwGjc9jarqoXtyvOPaZeaxTQM6NaaQ7VzrvgchwpcY5zAqm5
      ZqkuyNjtOIIoYGN7bG1fpT7vDDHGuiB57LidTINz2VAvdmFvTN4VlMJhWHdk8dzdHfBwam8w
      LRdAzdKPVcdrY+Bz408D1FLKUaIsMZfXz/VwgoDTmAlzybu4kDhLtSSTj75Eptq6Ta91VC7g
      GLLEkjDomloH5GCrNq9BXqsULS3/8nlnDGLK0F7fd7WEyTYl9CuxTD5kqWxUh2PxVrLL/lgC
      7EzxCAOnTkH5t1Emh6gYwGgFBY2QPCZ/niU6Y0ApAYV5paq10buMuUdgZ9vEp2UWGs+V9x47
      Y6CMgYsOPubCY4z0EOVsub3wQXDRrzYgTxqxo/c14PBVlSv+rrSaFE/5jwWKwN+vMTgzyWV/
      H9sz2DyQVz1LDClh88KItU5n+1wgS3AXR8QUztYZYpJbp1I655c2uuWJwVSZYGl0Z7WPvZpY
      Nfq10qCUEAi4HSe4EiZ+ruKEVhYxEW7HsaIzGoArqkBfdFo5Bi3mPy/yHFDY65ypFxHhQsDR
      rRvZANAphQiF2ynhdpqNUR5nxiUWoc9YCgPezWs8jyYkDxhYBJ/tOE6FHZ3DTSPBD9O0YH7C
      qUBi+vtifmDFE1y3whjhnFvE+7fXtEyc7Ye7g4w5F1cOJsfKy4nt1GZRo1NK5U73uZRKMzCt
      miT9APIafm9777mxIGQJ1nenWLKi7C/wAPbjVKUWqyvsS1gSezbz2HZKIRFhLNGp8zI8RX3W
      Qs2BnKy00TtQAnrTY3OmYl5fpD9r0wlATDMO7+IIrT02NiLShMnPQXmyHVKAKKVwmA5Ieoaz
      I3m8PO7x4nDA9Yr6whoGkMGBx5eXeLTbnfXv/F1IUyuqT2kVBl0YqCsIAkOb/Hv7jFcSnYZK
      SHg0N15DJVE1rQCxqsQm+XjMOcqi5pBcANM0gQqWfpf0b6XbOeqMhg/ZScXtJMoe3oAs0YDM
      YGzIKWtzCcFSQJYTYg7jvHh31mYbp0zWrutgGwhUGu7nkmF4nKzqEVPCuLIDELL01yqnICFl
      9UdTnke2JzLovczflgKPbQWtOChybmfwAWSoIEXAMK6ntEqpzuAAEeH+doujc9muOhO1ukbZ
      3wtcFJUzlrkYnbtzNzybEsmDXQvJ5j2qGr8y6O0nNU5biXziDseppGbvZIwBUQVszHZhqJ2g
      JMAq88td5lzb1haDUQaEHJy2MSbH9zsP0gqH4yzhJu8RrK3xO0SEvu9rvqqxFr212HZdRS+0
      1jhOE7bWZgmYEkipRSjJXczP/WewYvR+1SjclPBtjvjcGFrU8QzJ5/gqlIreyPV8ZIErnm8X
      phwNHBKGou5R0iCdK4EQqKiL2ai+k0SflFK46Hvsug4hxoVn9xyllLDps1+gt2ZxDoUiunMB
      rKpAsqOMxBz9HhxT0cKffyeiUpNe1LKU0qTWxykw2RSOJeWuB0HVJOzFI0t7XDEs18o33pUE
      L3/WnquVyjtAkXTGGHjh3DJK4f52m5mh1ftLiZlpHGGNgdEaO2vR2TnJgw1Sbiu/u9X7zw4p
      EY7eY1iT/kQwwCKDT4ajuGKYI+XsvYS0SF9tVWBDFjEkHEqFPYLKaZTG5sNFoGwnbX8AACAA
      SURBVDBOCbSCFp607UxfjNa4v9the0cB5PkZCpf9rpbi57HycarawxotWhdThPPTqZ6ZVkJ+
      sQyb+EnIxwmDPyKycQlU+EsWhsrIi8p1gxAx+AMO7maeLEFy4UoPY+3bGd2ZPbRAdppxcs45
      ZgsFJGBpLKsq3Ntuz5aN5GdaazEOw0KfJ8oOHFZ9JEx7l94v+87XnDMY+1Jrk9TsRMtqT8TN
      GBHinFTUqS0Usj9obechyjDlwXuAJjy82MKSqSXblTIYXEIsJwltrcXDiwtc9n22QZq2HUvs
      /hopIlz0/Z22gVIZCFiL94npNIRH0skdHg7BBVg914IkIlx29+HjBCK1CIGWBvHrUIg+x5hT
      B0pUE6+lUSQp65s+BzSRBpGCTw4ppJODLDh4TpeKYfIZjFi0dJymmr744niLhIBHu/u5mgUV
      Q1oY9lYE5XkB011uNlV1WSPZTmMMjscjdrvdQtJz0Furb79K+rMqenRuNdWRAFjKdTyHKZTa
      oiViN2UlJSSCnxymkKvR7exugQLJXcAV+NLHCQ93F0AiEOVEIJU0DuNY21GxfCKYrsO2zMfL
      43HR1sE5WAH9nhu7NeKjnNbIaoP7O4XjtI4crobIcWHcqhuGgN70SDAY/B6aDHqzPRmYVzX0
      MN2WiTZAnEOP2yjABVOn7IG0KifmZwmfaprhCTqVf7nT8GUanIOPERdaZ08vDAIirodbXPY7
      DG7A6D3ubS7nYk0FGj5OE6ai/mgidPr84XGSiGgVWWuDAc9VxJPEkp8Z9VyqY28tCECIKGeA
      5d3+otPoNIEQ4eOEMbjyTlVr/LRRuzzGg/fYdRZWdzl03RJSTPCIVefWSuFqJZybiHBvu8W1
      WAQuBDzf76ua2RlT/SOyhqskRYSrzaYWH1gjVuNMv65Gnd6ZAKXmcN6Uco4ooxg+urrVjP6I
      jd3V67hzazT6EUbbDGGWUn/AHL7LDHrqoc33d2auLuxirvRl7VyCo6oSoiqcZPq1do3FJe9D
      yJlSREAi+Biwnw51cm7GW1j9AMGFWteHVQ2u53mO+c/p8lzzSNZBkn15FXEYdLV7YhT5rzOx
      9Fdaoa2CmFW4ESEFDH720O5KCffRRxxdPq3xojcwKtspU8xJ6lQC7/JzApCA0aX6nPvb7dm+
      EHI4htwFEuZzyaThSgB2xmDfZLNxGfmfhk5jgbA04Jg5Wdr0eltyXiN6u80NpNmVvg555VQ7
      W05ePM05nZ1OrSeWDW9ZccCqDoZSqbGTqhOF75OL6Zzqk6/N992OozCT2CgUMf4obn+jS7J2
      niSrdUkmQR2Hc8Rt43DglFJN+rnr3nP+iQUuT4R9yZhrqbcWQCmhjgSj8vO2ViEkj4hck/Si
      63E7Dth12xyW4gNuxlAFUBgcHmwNxhhLPSGFySWkeISFAYFwOx0RgwYpwoPd7mzk7lhUNUVt
      8NqSLBFcSuhVLmS8Rs/2e1xtygmgwFlV6BwtF0DCqiHBTMTJyykmpBhrrujSYzun9LFen1I+
      y3ZtklkiruWV5vvV2QP6OJ4kxFgPqIOQphyvcg5C3PWl1GMJdR79eqmQXZcrFec2AYMPFbPn
      8Wl3ItlOqTtzGAj7UuTC53gfCSys+S3kePsSh7MaBkaUE911ttvGEBASzxOybVUM1axObGFV
      V2qqZs834+t596C6yxAIPuRw44sO0B4gdFDao7cMf67nM4zeY1cM223XndgD+fl5h7CFlw5n
      yrgkoDratFJ4VPJHXpdOHWFACUATWU2qPV1lLpxU72MEIsa6CjkPgOg8MsL3y0mXBnZELDuI
      6HRaZg8x8hK8R6IEQ8vjOPn3tUVADfLEOwPTxnbQ0DkWMmTbI8SIi66rEk5GmcqdsN1JWZDI
      +kQynuZEmMTT/IWF444IN8NwNhBsY0qFCcW1haS9FOGCr469PG62HIkVYbSCVoSYnTKwmkAr
      qYUEwtF5XFqLrTVIlGoA5Bqx/i//NkrVBaCIsCtIUbXpAGy1xiBg8tVnr3xWi66duW8ZC4Rc
      l4cn5JwezZPCCFENLW4mXRUsXjWMIP/n36V3Wb4jJIeU4kJats+qbcgZNCffyd2gvr9hm06g
      UcCshm10X4paBShFcD7AKIWuCd3ge9dCrgHMnuDC1MYYWGsX52KdO2er/ZsT3O9ifq0UDKlF
      xYXeKHBEtwtYRPSqgrLxXCgC7m8Nek3YdRr3t8WYFP29KLBmStn4RcgqMhdNex2qsLX4TK2M
      qSLCVutag3WNfLGDJI+N4Yj9NK4mBAEr0aAd9dWZwBMomY8NL7k4jDEYx3ze66apxci/s9Tj
      2u5yAIBl7kFVg1IQ0n9OJG+9kgAwOQfSgNVzEv8a8tPaKfX9RLjcdLgdWLoa7DoLJMLtNIGS
      CE1OcznDNcNVQphrjMzEaiVXoZBOKv6+fS7//6pQgU1xtnHbZuQpf+8jYDVhDB4b02HyGvsQ
      sbWEYRxxc5gQYoLSCl1n0RmCKdEAQI4o3VoLWItNCNCK5hTR/vX0cB6LXZcjaGV/1nZSQg7l
      MEQYQlh1b0k/UL6HoHXC5NbLwZzsU1qbhYHaBmKxnsqLgb/f7/fYbDb1GBveIV68eIGPfexj
      uL6+xmazwe3tbc2zBeZTDVuJvdvtilueSiLGMhNKDs40TSANdPp8FptUP856g0UegtUGJilM
      JXdXU05+AVATOOwrDK6K0Kwc58ptZDSI0wpjjDWBZA2MYCGx6TqMZ6o82BLrz/ZEdlolKErY
      GIILCVZntcfmM14wFQF5M3jc7oe6UKIPiDHhVik82OqaWL8REauczAOVnYnnhM/a+LDmwEia
      LI3eghfy+q0xcAWRuuv5nc72W/hJCmMB62EDnIB9PB7r73JXMMbAe5+Lz5bFst1u62SaUvl4
      s9nUM5+AOV80hIDD4SBKFZYQBJGi1yJOXPnNqOwkW2u7lLpyZ2uJ9VACsNE5hZOrqGVPra4J
      NlNYnrp4Dq3htqxdIyeaiOruyOMhr5PtnkLA9RnmB3Kyiy3MT0QYfISPwBQARQm9DSDlqsqq
      SaHTHE+UF2DX5Z+qcoUAJ3a622HI2WtRnISJnPboSorn6xDz3GXf47Lr8riX/vK4cEwa26Ks
      EnVK4UJ4lttTOoH5pFN7xga9szboycVFcrOaM45j7fh2u62nmex2u5oXysF0FxcXuVz1vXv1
      ZI/tdovtdotdOajNe4979+7NZchLfm6bn8wDl1JOIfQpVKOrtRP4M2kLVHtBPAuYF8C2oDsH
      wYRERUUsO9fk/eI955ibQ735PbIdvNPWtMMiOWuNzDK+Ug31IeQ0xzPzRuVnVlkjQuAQ94Tb
      IQBJ2GnIMVWagGGcTnI1bLGNepPby7teTGlxQB4wS2xrLcZxrOH0r7MY5G7HzM4gBp8F1joI
      iTJMyk/nXOpWyJ2Go890tizKOQOP6/RwcJeUxhcXF4tUOSJaFFpl139KCdvGSXJ1dXVirPLZ
      wO0Jk/y8cRwxBIfL/jQkurVBpLTm2jfS8soTmo8f1UDWMcX2ak0+qjSUNZHEAFebJS6TuKdp
      qv1nalVKjqqVVRD4mSwI+FA+rTWGxpizSlfDlo9rksF4kw+4HZYMYLTBtivFsGhWk2KI4Mw9
      2Q6jFS63HZTKFSYuug5W6wXa16orXNWbGVfuFFKat+/iMeT8EP6b+Y2T7mOBvX2MFaoF8iLg
      UBiJrp2rMr5aGW5N/ZEwnlR7gDnSkcsKygKrkiHakx8lyQFUSsGHHDPU6dMkaaKcRJMod71N
      d5TP4rqhWplFUJRWGj64Grsz+VC31QCc4NKT99hai94aDCuQpfw7xli93XftRudCHlrDmZnH
      OYdNqSbhQoCBwovrI4Ypr8pNZ/Dw3g5R5/O9uBhuS6NP8KnU4OyAw+Dw5MW+HphHROj7Dkpn
      NOjR/R2s0XhxOGDTdTkcnGakqxU4/Az+TIIlXAuUq3LLHaLruhNbqSWuvjFUh9yS9iIPmpDV
      6w2f4LlCqwtgDS+XE8eSmgfAhxweISuqMSPK0zxijFUivspQCrEY0sXZxtfz/yEEHIPH1s5d
      aNGYlFIJvuN4GY3B+VqFgUjlU8hVjgrdlcFfix93IcKqCK3yMlJ0cgmUUvWMKin5JVNI2+V8
      /xOmOMCqDrGoL1CAsgrJJ1gAxli8/9E1nHDeHQaHYbrGvXuXuLe1MJpgNaEzCpPnhKKc25wA
      uJgwuoC/fXa7wNezejvhnUeXMIbQW4N9KQHDzN/ueq0waPmHn8t9lmePsaDgYEZ+xrnx6boO
      aZoQ9WyUM/kY8fJ4hNUaG63rSfbn6OwCaD/jRrWf+zQhpACbUOFTLhbFzMCGXbsjrBVVBTLz
      T9Gh192Cafh/5xwCgE4TIkI+PKGcZL9QMVKEVR1c9AgRmPwIV8KXj9MEoxR2vQUloDMWFCPG
      FRuCn3coJ6JERPRGYYpD9nBjPt2cdda1MvGLPoZQF0n7vhiz/cNMaYxBJMLNcQARYWstDodp
      wfzy3mGcgDLOvVF4sLMYXSxRoBouJYw+QSvCYZxKRbmUVSDR33yySs5icyHUwDYp/dtD9Nb4
      RJIUYrxLSqFa353SQnWS3xNRDR0/AieLYGstNFI+ZUYpROcyiLGyu5zUBn0d7Lw2ErkcYDai
      lrqsUmqB9kip2DqLeGD4HUc/QCmqJ4LIBaDUfFbWrtvUolqtrs+UIUyNwY2LeJLO6BIhmZ9p
      kBCUwnSmlEgCT3KCNflsX61ytWze8eQBbXcRLxTgfIpmb7ZZQJg8Loz6pJTTHc/h2gAQwuw7
      mXzEZaexsTlGhwCYlNDrhOPocTt4aFOYWCd4Nxv3MSVsjMGzwwGX5eRKqea1wquFqNeINQT+
      fe261i5gbUMKFaIcCrNVChNltI4op5hSTLUI11QSds6d83ASCnGO1r4LMXdEY47sbAPQWN/j
      s1rb2jYSAamLKgZ0ulsY1Hz9NE3wQEVjOER6jZEUqVqDB8hhyz5lJ9ZU4nlMUdtCCKtnZrGB
      RbkBMJqw63LtIkq5PcZoAGqhgkkDjv9uQQVuZ6u2tUJocG5xqEVCLoFyjuYgtKzuHF3A0eUy
      7BujcJxyyuQ4NfE3VKJGy86y6SxuxxFGqRr0x/1q+yAF0DmNQd7PuvmrSC4oWW1OqsIWbHQn
      IAGmE+VtgFrH9ZU7ANOazrpGPrl8uotaYreygTw48iQWhkdbZCalXFtIQSHFJe4v2zA4V3VR
      bu8a8sMAGSFnFfkYa43/HHeez6JyzkEbA19ydBMyE3VaQxdJI6HF6DIsqrSCKXHw3LxzthL/
      LZ1ibcmUdrdzIeBQfCqSYkrY9BZaDSfn/GpFeHRvAx/zc7dW4XrMDB0ScDsGOM+nu58St+dq
      18MYhcMwYturWshLCjjZVr63VZHWduXWZlgj+f2aDs/v5lD9GAJsbxAR4OI0n0KfsuPsnEK6
      vgDyG+5cACkldGpTEZg1OEsmVDDDs6OE6823C4Gg4IJH14tcWQGrKq2LEboMN2hPLsnPWiJO
      HDu+7WwpR14GJ2V8PevMGRdXKccVBcxnASMlXGx6UAISCgwaz++cLMllePZdUrI14kNKqzH+
      ABAo4a2Hl3hxOwJEVXV5/OACG6NmwzIl0DijQVl1Uwu8XzJbZxQeXuxwse2QYsRl15Uwh4jn
      NyMGl8MerrYWV7slQnduh2v7yZUy+PsWLJAkkaRWWPD3SikMw4BEsfp48uGJ8zy8FgrEKghA
      C31vTf8HUE+AX0vi4JcyzCUbwZPDRrI8hZFVjYSMSXN2GvsffFxWMssdjpiCL5UbZkNJSqhs
      yHl0xuTjM0OsaAgo5wRsrIWhHFfuMBetlWpQDPM5CXftjnKs+BrehqV0DNEjpFwlTrY7pVRg
      V4uXh8NJFKRVCteDh+1KkJrRSCnH+DBODuScZasJU+AgwGUgoMTQN1bj6iKfoXZzPMJojcuu
      QwgRT66PGFyWoz4Ak8sC43I74+uSkU8N+1MGXAt+PCds76K6OBJBw5RCyAqTm2DU3bvNcgEg
      HyZmlIXS3dkJXvv8nL63thC40WwkcyHVGhKgy0klorxFZYwSgyMlV0TOUHJ+goIqNemzCpQo
      2wKUEnTJIeYy3Qy7JcoqkkoFsYoRh2GAJsLldgujFK6Pxyo1AVRkxAdXM5NkDdBWP5ZOrwVa
      RVla+XBAb5bOQSKCBk5KA2Z8O8f0t+Pvy4cuRLw4uHqNUssdE8hQ7lsPtghFhQsl2WcqUabb
      orb6mCrzz7wC3Bwn7PrTnBB2csn+t/2SGYGvQ2vP4AVU7b+U+xER4cOECAeorHGoMzZTowJl
      pomiKNI56X/OiGuvZcNXDn6dgDJQPBjee8SY0FO/YCR+B4cBm2ZLs6qDQa4vKvsBoCJE/MPq
      FDvlYow1bsYU6cy5prLCA6fvHaYcJdkazCEE9CGgt3bRR6kP11PfBQJkVQerTu2Bu8Y2Rzuu
      DjnGwy3+5vojXDx8Z7FA5t2wjFBWj/F8P+H+1oIIGASy1BmDToQ9rFEsCJpU8VqGbnmIx0ap
      V58DLZ+xpipJ28pai8lNGNIBIXn0eltAkIgYgEQRaydkrNgAhF735we/+fxV1/G2L7Fc2YGn
      T5/i8ePHSCnVgqr8OwdVSf3eloAnaWCzTbHdbiuzsdM3cRJH2etzSEGuiwzMXlaJTxNlRUqq
      dhtr4UI4G1cOADfjuJqgzRMtGURKTGaIVsLdjaZk1caFGZb8X/7n/wn/4k++g/7iAfT+Q/x3
      /81/jU+89968U8YoINLM2JNPeHFwuNwJT3zZhbn/ndHZDmgM7m1/eoD4q6i1O1pBIWlNjZLj
      VO+hcqZ1UtDK1FPmifIRSdqYdYsfa/kAqke2/85Lf/l7C4HJhp0zjKRhw+HRu92u5hSM44h7
      9+7V/Nn9fl8rSDCkenV1VRdKZXpkV7k0rGPMhngMceF8AmaprE0p2IvTXYoDqYhy6ROOQWFf
      BDAb12s1MLmf7RisbelybCV6tEZjmHDRb3E7BgAJf/B//St884MR//S/+C9BRBiPe/wP/+yf
      4X/85/88O7oUYZpchjgpw6Pe5ySfoHJEKNO262plNiBDro/vbfD0OqNOhMz89y/W01zvIslD
      HB3c5j3weKxFI6/zZE7KN0rBwEIZMd4gpHgaWl3b0L6U6z3y3y1J3WuN6StykwIo4ZUTud1u
      a95uSgkvXrzA48eP8fTpU4QQ8ODBAzx79gxvv/12OTopb2NPnz6t0aN93+P29hbTNGG32y3U
      jhgTpimf+MhSGJh3J9Ia18dcfk8rhYfifp4kJhmv3zdxPi6EkwUOoKJda9K/HUtJcsy0Uis5
      s9mA10W3/drXvobPfOU/rPf02wsM5j6ePvkIb73zMXgf4FjFSQmsQcbC0IZyXc39NNUsL25R
      jBG73mLz2OSYKUWwWlUb6lUGbCvJ5Tix7bfGU69DdYxIwycHFQ2UUcL3Y5DovK1xUh4dmMNR
      2x/+nGN82s7IawKyccjOinMx+ADw+PFjPH/+vCJDLOE3mw1evHiB+/fv4+XLl7i4uMDTp0+B
      sg1aa2uE6eFwqHrl4XDAMAwVhu03m3omb0SOgYlleo3WuNxs8NblJR7u5iNE1iYix8nnRcTP
      B7Jf4uXxWI/qkdRKrSkM8HEOprtrlwXywlovdajRG1WYOeGdd97GzbMPF88Jx2tcXd1DihHj
      OB9H1JJWQCSCSgn3NptFfjSfD5FDPHT2P2hVIWwtAAneoeWPhH7bCFB59oSMDlhbNDwna5+n
      lEPmp5BDRSjlIgAqafgpLGKMWrrzkDz+bG1i5N8nk57y8Zqsc9fPm7CHlFLNHdjtdjVEehgG
      7HY7XF5eIoSAy8vLihRxaUG+lg3od955p6orm4LGhBhxM45wolgsEc1ndRFhP47YdXcfot2O
      By/yqcS7+5hPMdw1Bp1EgHgcspd7DvBbGz8eG6XU2VNectHXWA3d/+Q//c/wX/23/z1SDLh4
      8Ba+/0f/J/7z/+jfxSfeuoeX+xHBZsbN1Rw8nJsXYW8U9qVm6QVR3ela/VxrjdE56EZ1a9W3
      dtGfE36tmiPtg9eBmBdjRRq93mRwICIX6iVAGwWjzVnhS0l8czweTxo+TRNsb+HjBKM6xHKQ
      hVypnOUljUkfylGbAiWQA1QnUs2FseR37cJjlQUA9s7hsu8XOa+Ldqd8PtboHDYlvbCW4C7P
      cs5V/F+pXNRW0qqkQc49Hpyr2VGXfQ+IPGnp5WV1iWh240vmkH2bbZY5niakhBdn6v1sjMHo
      qMKeAHC7v8H//r/9r3j+9Cn+4//g38fv/M7vAki4HRz2blZpEoBxGDODEOHhvR6D91UFnLyH
      ixEK2fhn6R5CgNK6FgSQYSpy7tZifKQQkHaV5IM1dbrlnfazxVwRME0jYkgwXVaJdDI1WaoN
      tyYieuUCuL29xfF4RNfl+HAC1cnlFMiUcoILIzf8knv37p10tG24XAwS8amOIqH7sq54cC5X
      Vy7qSLsAJu9xfTzi4cXF2eJMwzCg73uEGPHicMCjkswj+y6fKUt157PBbE6eKQt3mqYKcUqj
      jv0fnOcrhcSaQTzDldnPcM6w3lqLFAn7iQUGw8o53kcTcHQRLvApNwLAQMI0OlxuDPpOYyxZ
      Ppyb2xmDrsytTP3clCNc5ZzJ+JxzwW08nuwPOndC/DnHWMuTa/o85xZooxF8wD4cMXmHy26H
      jcnG+toCOF9UEfMWdXV1BWNMRWNkA6ZpwrZIT2ZgXgxyMgd/gFYanTjQQuqGs9E6w5Jt9B9f
      c9H3uB6GRWJGZbgYcT0csenWD5qWz+L3dytJ6O3gjz57kTfAXLY9BKTSXpkBJXVYmclkGxtB
      qkFS8ktmOlc5jQA4cU5ubxWMys6xYylP6DkWoNnMUkzoO4ttb2pJRJ4/UxKHdF5R2JSKDdel
      ovWu62ouOO8McjGv7fYyZ7w9cLvlA75PFjRrERyeu+rILHzHFfeiitBRA3DQell6s6VXLoAL
      UWnr4cOHi0aM44jdbre4BkDV4WWEZ8J6ri4wSwceQB6kVi3gz4L32FmL62FAX2Lveam44EAI
      MKpf1T35PSmluuPZ0ua1/lc1RSlYNacbygWplMJ+v8fV1VW9T37Pu6Usi9hu/9zW58+fI8aI
      Bw8f4ng8AkpBEy0cb1YpDB41ySWlBB8Seq3A3M5Qb0rVJVI/TykhEeHgInqjq2/DaH1Sa5P7
      zzVQD9OEbZmf9vw4hqjZTuL/12DOu0hqAvxc+Uw2rtmJ2s6FIgVTYtQSlnkLLd25AIBTeFNK
      LWvtSUgrl/9ro0ENWRCJI4+EoSORJknS8SFLp/B3O2vhvK8FYAGg73pYs0x/lBK/RTZSykFv
      VsQjtZDls/0ewU3YWo1UzlGWh0kbY3B7e4vLy0u8ePECWmtcXV3heDzWvGAuCLDf7yvK5ZxD
      3/c4HA4V8WIw4GYYQEphuL2Fcw737t9HAKCNQac0rodctzM3OZ9jfOuAq04BKcCHfNgdwE7A
      JHIamNGW6mlMCb09DW40Ig3WKoWQ0klJGOYLDnZkoIDHs732HMmdma/l5Bm2HYwxNd6/neOU
      ErTR0CFXuB7ciAu9PXkP02sFYrTW+bmO8CqUoQ8AypZqQGmJfKwxvXwWsDzJhGFN3hatMdht
      Ntj2fT6t3VpYnY/I4fsl7DZNU30f66FjLMVui/TiQea+jnwCCuW6OjFGTGGEi9PidBsAeP78
      OboulwsfhgE//vGPcXl5iadPn+Li4gJa6wrnPnnyBNfX19jv9xjHscK/XCEjxoibmxvYvsf2
      4gJkDIbbW1BSeHY7YXK+ho4sxj/lJJh5muY6rbzLEBW1ydAim6q1xwBU45cZs7e22gWSH1io
      KKUqVMyJUK8j/VuhyMR55kBG9ziqYG13r4sG2Z91Ybe5gBheEwa9i5iJpArROrl4i2/TAdcY
      XXZY/i07Io1FGRLN17S7iHyO1OkZ1ttut7NBX9GqgL7otcBcdpzf4at6sJRKSABUzjk2ep6U
      cRyx2WxgjMH9+/ehtca7776L6+vruiNM04QHDx5AKYUnT57g3Xffrcbh9fV1LhdjLY6Uy737
      UgXtwcOHeL53i9icEAKs0UXPIQwuM7jkjQwTEqzN47c1ORdCUcL1KI1jPlFlnjeJ9PDcb6zF
      vqBnpqho8lxgVmG4UALbSHeBIZKfeNEBqCUkZS1VaR9K3mq1Ez8EbO0GY5hW64YCr7kDtCS3
      KJb6rKfJhr1K/5OMKxlYGsPcqRYNkO1odyXJ/MOQnSObzaZkb5nZiAOqB7gOSLFBjDGYQoAG
      cGEtNkagB+VfpIDJT/jggw9wdXWFBw8eIIRQy54zQ9ze3lYGefz4cS0c1vf9bOwag0ePHmEc
      x2wHFGRts9kgTBN6IhCp1cA0ItSknZByCLnRwqinrAZZk0uZGK2w7XOWlBxRwpxNJsdwqTbl
      Knm7rkNvTI6KdQ5dv25zsQeeo35bFUfu9HLH6LquCiopJHmO2RHHKm2rZgFAZy16ZbEpPpA1
      uhMGbUlKaWmY8hbJcTZrzNqSZGr5e2sjtHVzzrWLB0Y+n6Uxv4N1bv7eF2jz8eXl2ec+ub3N
      1RB0DghLFEEp/x9LUkyvNyAsSzfK9sh2Sf349vYWfd8vjP7ROeynaZEIQ0TYdh3COOFmWkKa
      RITtpuM/MjqVclI9EeCLoWyMKp5g4LLTUCq/61YU5yVk6b4Rp1yyRG7RG55z5xz6zQYvDwfc
      225z6HYjsKSWwHBlOy7M0OeIkaQ1lVmqx8xDfN04jogqYpgmvHXv0evDoK160n4nK0PHOBfF
      Xbunhf4kw7aGbXt9q/rc1V6+lyuSbYVzixeDJBfCnfU9Wdr6EJC0hjV5K05IyEpJOfQijLC6
      g0pzKT/eyeQi4PFiPfayLDw5BvUkSqAugpTy2cJGKVxtNG4HjxBzVYd8xloOCJuDwGdSWkGV
      b4mAy07BmBwO3h460RmTD9hemUPJxDy+DHkDece4Ph7RGVP9I7wjSOFlWgwhDQAAIABJREFU
      y9nJEpR4nZwAVqfOaQJc97X9vus6jNMIH17DBuBJa6mN05DoTj771iy+kw1oB/Hc360U57/b
      6nPyGjkAzFyt+gFgoZbJZ7mVsn3y74OQjvIML2ssYspIV0SoOdERcVGkq93VZDul1JJ9C8Uu
      WUuF9DECCrh/0UETQauc6eVKGRVXDrXI7wbkoiDKPgIf86SHGBcBdvmcs1xnk0qb9u4aijQ2
      eld3AfZntEJpYy18CIt4qJYPuM/MsOdQNyDX9ee0U63y4ejM5OeiR1lbkPPN1227dSToJBZo
      bTVKw5cnkVEVrTVcHOES0KvTM6Fa6c/PY8Zo1SB+F9fUfF0EinXvVsLw+ySMmlLGD/nwNWn4
      xTTX3ZcISSeSWYgon2RPCjGWhYHTEAA5VtwnrnPJwqZd+H05Tb6NAVJE6I1FSpnxbdHxbfLY
      WIP9FAAQiBj7p8r4WpVEGCo19Eu/5CLrjcUQACCht/lo2nweXI63B/IuKlVISZ3WNWivBSpa
      4ORc2AMRZXQtjovUVpUUZMnGc8gSLwIZgKm1Rt91SMNPcErk2oNbyc2QojEGFHMJwlepKe0z
      zxlZ1aFxJlAKWNoQMnFGxinxfd77k5o9kvluhwFXmw2mEHAohph0PG2Es6VNvpdIVavarSFf
      cuLl7iZpLfqz0waDz5LRRcL90g6ecKty2AOzZUSCQq4MtzUKiQg+RHQmM4dUf4hyAoxOOckG
      AKzucEUPEZJHCDF7j/vTMpVASQ8tcHEQY9HaeefsOMnUKeVDtzXpnJpLS2l/lyokn8e+qBAC
      SM1Fflt6rQUgJTUbMVI6a5GMzte3VYF5otaMaG60DIE4lyq3JvlZwvA9cmHx4pBbLBHBCVx4
      9B5+vz9Jc+yMwb2iSrWlDNtdTKpXso8trfW7pbWQZaI5LzgjWAlIM/N0RoFUwn4KNdS7N4R8
      VkVCLKEcRmtMYXm4xtZauJgQUvac9lRK3CiN5IsjU5Rbb43bY/H+XnQdBuewozk0nm1EGTbd
      SnD5PA6VuUuYsiq0FlaxGEc1AxNLf/hMr2UES+nLmK5UJ6RdwJCUhEAZgZFSeu0dAKqR+Cqq
      OrNAB9pB5fh0llyLd7ULqWH+3pjFGbeyXXIC5eJqx2lNpWwXo+wLU3veryI6PeIUvBBybI9S
      paQLEnzM+v7GzgzAzsmhxPT0ZW4m72vu79EnDCFBU4SlGeCw1tak+N4s+3OcJsQQsLG2xkuR
      sBnlu7mv7Y63NjZ3UburvOpa3jXW6GxhrDWjkx1da9cCM8TXOj1kAs00TTgejxWeZJLS/3U6
      xu9mW6GVBhydyXkDbZ/sK57fOpvaGpiv2tYjYj2sj4l3UFlUyoecoshnb8kzrmRbjAJKfSt0
      AtMeXMQUga1J6Mo7jFoa3RLE0Dof8kEg9EToy2F/RIQ+hYouychNINcL4sPmpPCbvM8VNSif
      4UX5i1pnaU3NkwLiZNxWds2WuE93Fxh+veeeLY/e6ljt6mylLddtZwN0zXnFu0eMOaOq3Q2A
      +bwxuX3K7/l/dq6wp1C2k++XSFBrPN21xVoOtU7Z6cOM0+525yRW1tPHHF4sFgG/83q4xehC
      PdLJhVCTadrUR6bBO1x2FprySTW8mGov0nKO+EwBHhP+iTFijAGTDxn2LHE2eZGoXFcoJkTv
      qle/HSu5oLKqtHSaSZVnjdZ2gNedG8lb0sA+d28IofLJGp0WxmoMPaa1iDq+nj2szLStwbrG
      fP2mh3e+nirDKgtLnuPxuAioao3XYykWK3ckzkdgD2vbVjk4HPu+BjemlHLNUFqGfrTI0jmn
      TEoRne5PjgodxxHKZGmfjWePWPT5KSRMx3JegdZQIQDF0wqgnr/c6XlstdboVYIJAcPxiL4E
      2PHuNI5jtR0SMuM+f/4cpvgfJu9hlMrYP4ApZDsgxFQdYTKWivstqbd2ccrjOa+9pDX15a7r
      2/HnNkkYWV7Dv3vvswe8M5Cn4kg6mUFmPnnOUwLqcTiSeJBliUPJ+DIaUDbMhamiRkQZxWFX
      eQhh6a0VuaUs4ay16Pu+HjM6DEO9Tqo87QC2k9CfkQp83CbfJxfwXTosX6+VgVHzrlSZ0RS0
      LAEa2eHVW4OLjUVnFV4+f4ZnH30EoxRePnuWwxtCQBzH7BwrbeLQbR8ibsaAwQPHYYBzDj/6
      0Y/giwqyPxxw8B7HacLoPSbncHN7m30IKddXIsx6cm8ULjsFlcKJ3r5GRFTtB+6n3AnuoleN
      oxxPKeXl4pLPYIbnUzd98ECBcOmOiJ8TDuDEb+enqkfXICVhVfPW2Ory0kCR6gKQVYN88qNC
      9BHaAF05A0AGQrEza67isNzG+ToAC9uiDZmWg8htk9RpjfWEw/m+lCL4hMpW+rfPW3sPJ2wY
      qzH6YRGmnccklUrVeQwuL3fwhcEpRlw/e4bNbofh5gb721u89957+MEPfoDPfe5zGIuxGwFs
      dxf44Q9/iAcPHmCaJnz04x/j3v37OZy6CKnHb70FAnC8uclh1dvtSWyRopwgP6MnS1rbzQlY
      zPddY96O16vUpDV1XLaF28jV35RhW8qzg/zOxbZYGgsVQWkkHaA7VcvKScZnCXyuAxKCIioV
      55IHAiGGiDHlXaDV7bmzXDNGhuOe7YSa8wnkMa1yMNu/GUE5R5N3GPxpTc67JrZ9j/f5dBpP
      bpX5gaw6eB/hfHZWXdy7j5uXL3PeblHzeJJM1+Hly5f4+Mc/ngPmXI5y1ATYrnhir64wDQOu
      HtzH1YN78C5DlJ/85Cdx7+oKt7e3uHn5Et12i23XLXIE2K5g6c/MLCHtVurKyE2pLp3LBaj9
      PrNTsMRfQwjba5i/vPdQOh+qHqLP578t7zjPp+calg+9MEgpIoZY8ynZDc60FgEon0WUixbF
      GBBcQqCI63EPRZgrLGNmSuccjDgzl3/YPmh/eNIYCWIEitWitl+S2pNFJO3HCSFQLc4rjcjz
      uv/S2EypFP5NK+8vfx4nh5TmJBQfAja7HW5vbrDZ7bJjSWv0mw22Fxf44IMP8OjRIzx58gQp
      eOwsQPA4eg9rDFycsNn1uH15jevnL7DdbCsmD+TDCB8+fozD9TWs1jmpXwqqZteWiIv8TKJ1
      rXe3nf9zPNIaznyd/FwuMufzYSvjONTcjZhKuHzySAn1B8g+jVx0+A57JImWtdGgOXl6PvZn
      jc6hRkwhBgSfjb1jGDF5lwOmrIGGQWeWsGoONgOSkBxrUoLfxQ4aY+3JGbE8cLyjtI6s5ytV
      l5mMUrgo6iBfv+ahlmPAn2ebJQA61ewxafcwjcFhmtgnEWHJgF02KQSg6P3BOZhiF/VEWUB4
      DyhVzzMjABqA6QgdbFUld7scx8OJNtM0QRuDYRxhu26u/1kkaYveSLWPpbms5fM61Bqn7Xfy
      PZKXWhskM3yAp6w5ZDsrIYYEUtkfUkYPBILRdpG5x1qL6Nv5aNAYY8X9YyPV1joorXNudFVf
      KOFmOiAED10ObTPKQsMsBpsRjBBCLc/eLi5paNXgKGPw/HCotXnqAdDCGccIES/mWvP/DG2a
      BO617bhFJtjxpjQh6Zi3YwrY6B2s7qCVweCPWWdGwjilYl84WKMwuTirSSoXvQIRqOuqo46s
      RUgJxxByiWhuCwCHgC02C5CA28lgBYeK7JrIWA7pkKEd3F/uXxtM2ErrdlzW6K5Fcxd8ynzh
      1IAQSjnMFGB1B1BCp7ZwGMvC6GD00pl67sy21QXAxWb5cLsEwEUPUgUxKOpR2/hWd1NKQRuF
      MUzorQLZvp4poGFOBkNWkuZOnzPG5PdKKeyKG/7Zfo9Oa2y7blGolpNcGJFJAHZdhymEE1Vo
      U84QkHpsu8O1i3McR5AmwCT4Ej8zTBHbjhBVKLkD5QfAYQpQZJBSgLXq/2/vTJ7iuvME/3lL
      7iSQQIodhJCEkYSQLAuELFvlru6Iqei6zETMYTwVc5hb15wm5h+oirpN1Ezd+zAxMTFRVe6o
      6K4O22Vbm5GFF1kyq4QkkFgESJAYktyXt83hkUmSZKbwFCDJ+T43Mnm//L73ft/f9t1Ip3eX
      ElAzjIJVzw3DMO0DbB0o5Hbq3PV9/iY2c4+Z/8t09lIGyVz7QKFDkGLXFXKnyMhTLB4gG0Mg
      G2iqiiCY5Vsz6fPN+9Wxy87sAFKo/ULssANkzo4z0TjZTY+go2hpdENHFmVEebum5i8N8kcA
      WdyKE3bK7s2yQlvX51v1cm8g8zJyyYz+mTW/227HtWmOz6QqNKtAOrYdd4qiiCGKqJqZTNUl
      ihiShGqYybQkcTP7Q06IZK43aeYe8ju/3W4jocbNvEm62fkNQySe0tCMuJnS3dBQdcEsUWRI
      mycUEun07uJmwdy32GQ5m649+7xRsUuuHfuzzLM0DOOFe7fcwJzM9/kjZ/7SM/NZsSVwPvmx
      EqWWz0B25nI4HMSVKA7JuekgJ2565G7N8KKw0x8rV+ZC7JgBcpcNuRpueuaJKJqSLY73IjJC
      OCU3Opp5pCjuTJkI253aComb+7Dy14m5cmYSVqm6TiyVIppMIrvd2/YHCUXJjvp2WcYmmKlR
      7JspSzIlOLNHmDkdo3Dnt6NouSV/RKpdbsLJJJpuFqMT7GbRCk2TATNtX+697e5ZGiiagWtz
      hsoogGFogI7E9kJyac081nTa5Zwi5QZsjp7591PsRK6YjLlLovx3tRte1Plzy2gBuGTPtvYz
      v5tR1kIzde4MV4gdCiAIkFITSIKMLNm2NWhsPjwzx49ZeLoYuQ9UEMzSNZmenT+1GoaRdVlW
      N9f/+eS+nNzRv9hv2ySJSpeLYCxGNJXKpj5Mqeq2JU9aVUmzWbFGMA1EuSm7cztU7ikJmBtK
      QTaLBWpo2fATl81OIq1sGdMQSabBYZcwdKHk3qMYkqRjkzcVTDCQcoYJMwZY2nbMqmqmj5AA
      2LStzbuBQUqNIwkydtGRfV7572M3I2imb2Q6X/53hcjtpPn/k2knP648t83838pfcuUvU3NP
      DAuxQwE0QwMBNFQzxM/YElYWbZtHo2b0k0hxBSj2IAqtxzK+GtoLOn9um/km+kJkKr2EEgmS
      ioJNkoomm9V1M0bYsZkuJbOhLTaiZHxtNJRNxy8Rp+wipSVJqcq2kkKZjplKG5h5qTMDSiYo
      /QXPUdBx2c3QR1MBwdDIZo2TRSkbiZbtPALYN/t0QtGQRQFByCkcYmz3scrvIMXO4AuKJwgF
      l6nF3n2hNs2ieQaIYLNtOVMWm5Xy28h1jstdumX2FsX2JAUjwnQ98xC3u7VmvrdJDgxDy+7E
      FT1tzhjiTsNYoY1j/kmDruuIkgR5G5ZCNy+KYrZOQKawXam4Xtumh2I0mdx2vl0IKWcjllkK
      5jrtZeTKTdmhqQopxaxWL9hldEPePIgudOqQZwozRBBKez8a6LhsmRduxvUmlBQO0WlmZcjJ
      k5pfgNsh6yRVg7TOZmkpHQQBu+jaFuJZiNzRfbdKkPEFKzR7lNqMKoqCIIKqq2QiemzSVgBT
      riylZDY2Z++MLPl9rxA7neE08+xeEmS0vJeYu+lJqUkkUUHTzaqJaSONXXYi5SyL8m84f7TJ
      /TtThjTTfq7A+a6zmSVTKp0mlU5n0/YVIqUoWR8aXdcL7i9yGt6Wdg+2SnrmnoplPlcUBQEJ
      h+ggnk4TjSfMosy6jlBkys1FgE0nreL/K0sGgiGiqWYQflrV0TQBQVbNvYsoIgtbKc0z+XMy
      iIZmFggUBNKKQUI1ZyB3gdyp+c/4hyhALpkBM3dZUqodRVEwRD2nPyiglzBe5bWTa6PJLJHz
      /f8NwygYZ7LNEFZqdLSw+DGQt5wVdiyBLCzKif+vzHAWFj8WLAWwKGssBbAoaywFsChrDlwB
      ouEN0vk5PnIxDBbnnrAWiu34KhgMlgxieXXQCQY3dvm/BlMPH20/CDWMH3C9xV/DDgW48+2d
      ff3B0a8GCUQLW2MBJr+6xtOo6b+Sz7Urn5U4MS/N+sJDnjwPF/lW5ds7w9m/bly5ys7cbMUZ
      +/xf+OOHN7h16xZ3xh8ACp9dubGra3U1wcPpue0vQlf57Orurs8lEpjlm9HpH3xdObOtl8WC
      K1y9epVkKknb0RM0VtkYHb+H5PJx5vQbrC3MshpLsb4WpLunl7oq0zlJ19LcGxslrtk4e7aX
      WGCO7xMia8sLNHR009FURzCwxOTULE8WVjg8sPWbz+enebIYoL2zG38FfDE0THO/nbU6Hx6X
      A8PQmZ2a5PlahPVIEgyDuelJFgJBGlo76Tjk4vGzKG90thBbW2RNq6LtkBddTTM6/B1JXaan
      5xR3vr7JU62Z4IlOzp48wvjoKLGURnfPGVLr81y9eo1UMknPm+do6WjHBqRiIUbG7uGorOP0
      ieOsLs4SUzSWn69wuOsUzf5qAJR0khNv/htON2cSsG4peDCwyOT0PI3tR+loqScaDHBvcorK
      Qy2cPHaYpxN3aDvdh5KKMTYyhuGs5OzJ49nr56fvs7CyzqGWTo4fbjKf10KAhrYjdLbW82B8
      mGBMpetkD74KH/5aBTBYmp1m9tkqR46fpGlTToudbBt4PL56OjuP8M4779DeWMsnH33EsZ5z
      tFSmuTY0zsKjMUJiFf1v9fCXjz7OXndn8CquxmN0t1XyyfWvef54jNl1lfP9F/hq8DpKfJ1P
      btzh/IUB2hpqs9fFv59haOI5F/r7GP3iM1J2H11HOzl/8W3aGmoAmL//LTPrMHChD6/LtORV
      +Zt4++JF7n11g6TsZujza+jA0OAXODxmJ5wfv0XU1cr5MycQBInu48c4daaPt3q7EXSdjq7T
      XHjrNFc+/Yymw510dh7lnXcuUu1xMDw8DOh8+OHHnDx7Hr+0wc2708w+GGElIdHff5ovrt/c
      enCGwaP7owwPD/NoZiH7sZYMcW1ohL7+fiZv3yQYi/OXTz+n961+WurN+xufD9LTVs2Vjz+m
      rfsM3Z3t26zVlXVNXLx4kYmhz4kbSa7dHGHg4gVqK90kV6a4t6xxoe9N7CKo0QDjUwtsLE1x
      9/EaAxf68TpfnGWvnCmZXDFhiPg8Doz2U2x8+8/U1dipq6vB7nRil7YWI9PzT2m3V7KMkU2d
      19TUgizbkEQIrcxSf/gEdlnalqR0eXaK9u5+ZNnGsWYvsys71/0zcwuc/sm/QxQlbLKErsa5
      ef0GNfWHeLa8Ssqwc66zmtHHSwQ1N4fcpitG8/Ez3B/8mi8Cbnr7Lm5rM7g8y83xBfxVboKh
      SLG7R8OL12XH+8ZJhv5pkPYaG81N9cg2ETF3NyIItB85TlejE0k2w/QA4qEAy4Hv+ebrrzEQ
      icQDSPZDuB02cNhQIs+RvA1IgkpEEfFXuc3Or23WKVPj3LxxnRp/Pc8WA6QFByeO+vn8xiC1
      Te2cPt6OT7vO4M0vOHbqHPWbmrM0M0/HifNIkozXu+sqWGXJjj2A2yYQTipomo5LMFiPJlme
      HcfX0gUYpNMKsY0VdMmdvaajqYHq1i4G+vvoPdm140e8NU0sL0yhqipr61ubu8YjXcxNjqGq
      Co8WI3TUe3Zc21Rfy6Mnc6QTUULRJGo0QNLup//cGdwO8+WeHniPwQ/+kebjp7PW7HhS5Z2f
      /C0DZ9u4eXOYiqpqNoJraJrGk/uTdPdd4mTXEczMODLoKVQt123WhUyEcCLN0wcT1HfuvK9c
      nC6zXKzTseWi7ar0U1VRQf/ARS6+/TZ1lQ0YaoB4SmEjFOLe2D1O9fYANiodBquhOJFIOFsB
      xoitEpX99J8/YyqNmsbf3s3f/M1PeDz2LZFogt6By1y+1M/Q4NaM1NJ5mNnJh2iaQjgcLSl3
      uSP96le/+lXuB4fbmxn9bhi7t4bTp7p4MDFGXKhk4NwJlmceMr8eJRqJ8+67l7DL5mjbcriT
      ldmHzC2tUN/YhLeyEm+VD7fdLFRxqKmNQ16JiYdPaGhpp7GhHrssYnP7qHVrjE8+4uS5AfyV
      LuxOJ9U+HzbR7Mi1ja3EAnMsrkY4fLidxtZObOk1ngZCHDt2DL/fj83mYH52hnff+0l2BhIw
      eDQ5wbN1hUtvn8Nb20BqbZ5AOE3vubPMTAyTljx0Hm6irraOhlovo5NT1NU3UulxU1NTS+eR
      du6NjaA6/fSdPord7qSq2odDlnA6XdTUmHWTZbuTuSePWFx4SiAUp7nej9Ppoq6+kdb6SkbH
      76EKThoO1dHR2sD42DiqIDM3/4xzZ08iCgIdRzqYujfGWlShod6P2+2itvEw9vQaC4EQnceO
      cajhENHVJe4/nKb7TB/+6grmpx8ys7DMwKVLuJwOXO4KGppbqZST3Jucxlvjp8K9PfGAhcmv
      f/3rX29zhnsRE7eu4Dl1mSO+V+uBTo58xWrKw+ULvS9blF0TWXnCtzNxfjrQ87JFKVsEQRB+
      kAJY7B3pRBRNcuGyvzioyGJ/sBTAoqwRBEGwXCEsypoDU4BMOnMLi5dBJnN0PgemAKkiweg/
      dlKJGIFAgEgsfwAwiMfNz5RUgtXv17YVwM4nFttpI8mQiEVIKRrJRPFUj+VOJvVjPtYSaJ+5
      /enHTK2sEk8kWXm+xNTjGTTDYO7xQ/7vB/8M6Hz8r38msPyMZ4tz/K//83u+D4aZfjjJajDC
      R3/834xOL/D1N7eJh9eZejKPkoqxMD/P0+erAFy/8mc+H7rL9U8+IhKNMXn/PuF4iueL8zye
      mWN+5jHRpMLqs6csLq+93AfyimGZCfcdnbXVVZpqqhj89Dpt9W6Cz58QdrTgtEuAwOG2Rh7P
      zDNw4TyCZMdj1/nuyWOmhkY47BGoqavlwXe3+OTTa5xo93Hl8SRxrZr0xhz/8f3/APYqvISY
      T+mkYiGeTE1w98EieniRmmoPb5w8xs2rg0zPPEISJP7zf/kHPNbhE2DNAAeARGNzM5VuJ+4K
      L26nHU03SCXipBUNDPBU+Wn3iUwuBLGhEJidZEPwUeW24av2srFhumtIIoRjCew2mapqH7K4
      5TXU23uS8XsPmb33HZ6WYzjQcbor8FZ68dX6EHUDX109f//zn2G3Qr+zHNgx6MbGBtXV5eeV
      mIiGWdsI4/FWI0tgEwUkh5Pg96vYnB58lRVEwxuEE6YFOLqxjuhwEwuHcXk8uB0y6+EELqcN
      hySwHkni91WQ0gR0NUVFhZdYLIbb7Sa4vk6l18PaRgSP2wOGbmbjdthJpXS0dJSEKuKv9VFu
      +Q8yqW0yaeLhgO0A5aoAFq8GxRTAWgIdEEoqiaLpRMMhVN0gHjerk8UjGyw9D2AYoCkpNjYj
      4ZRUnKfzT0mpOYVCdI1niwvZtIvB1WVmZ2dZ2zAd3nQlxUak+GmRxU4sBTggtPg688sbTE+O
      s7YRY3ZuDoCNcBQlsspKMMbM1H2m5xYBeDD5gAqvh/Dacz79yxVWgxHCgUVCSZXpqScAuCsq
      qbDDatDcIzxbmOfh4xmUZJx4SiEcCpOIbvBoetY6Hi2CpQAHhLP6EKngc7w1dYQDc0hOMzDI
      67IRTovIyVXCmo1kPIquG7S1NjLzZAZVctLS2o7f50WUZWanHuGtqkIzwOF0sRGO09HWABis
      fB9ETkWIayrzT5dYXFpkYmyEjdV55peLhYOWN5YCHBSCTDr0DGfdEVaXFqlvqgVU7twdxSZJ
      SJ5qWnJCF+OxBG6Pk1AoQiKyxlooRmgjRENDLQ8ePgYB1FQY1ebFIQmoiTCC3UNTcwPLKxG0
      0FPslY14Krx4fQ3UVbuKy1bGWJvgA0TXNARRQte1zfTuoChmdUPZJiNi1g3OZOjWNH2zEosG
      m2WBVFVHksTNQiM6BsJWPTU2S8RtFtMQBLPOmJpXeqocKbYJ3mYISyaT2Srke00pU76FxX6T
      3/kzbFMAp9OJM6964F5S7jOAxcsjMwPkY+0BLMoaSwEsyhpLASwOhDt37vCnP/2JiYkJwNxv
      /uY3v2F+fp7f//73/OEPf2BpaYnf/e53BZcq+4WlABYHwpkzZ/B6vdTV1WEYBl9++SV9fX3E
      YjF8Ph+JRILq6mpOnDhxoHJZCmCx7xiGweDgIG+99RYNDQ3ouk4qlWJkZIRkMklXVxdOpxO7
      3Z6tL3ZQoeqWHcBi3zEMg7t377K6ukpHRweJRII333yT9fV1Kioq+Oabb+ju7iYWizE5OUlD
      QwNnz57dU7uF5Q1qUdbsyhBmYVGKVDTJxMf7mz7/r6Xn78/jqNi9LctSAItdo6YVlsZnX7YY
      Jen+uzM42L0C7Okm2NBV7n43ihpbYz2usrjwFM1yw7V4hdnDGcBgbvoRaUFES4Z5shSgpqbO
      dPDa3NXru6iebvHq8jokESzWz4r1vT1TAC0VZWFlnVA4xLrvCMlECjFvF/86PECL4rwO788w
      jIJyFpN9zxRAcnh59913eLqwQF21A5u/htj3C6h6LTZJRBAEJMnKxfE6I4qvvtlIFMWC/UyS
      pIIW5j3fBLe1tgJQB9RVdOx18xYWe8qrr9IWFvuIpQAWZY2lABZljaUAFmWNpQAWZY2lABZl
      jaUAFmWNpQAWZY2lABZlzZ46w0XDIRRDoqrCiYaMoaax2e1lnZHM4tVmTxUgEokSXFshXllB
      2t1IeGWRnlPdWN3f4lVlDxVAxC4brAbjNB2q5u6db3j78nsIgKZpRav0Wbw+aJr2skV4IZqm
      Fexnxfre3imArhCNq/irPYQiSXr7Blh88hBfzykkSUIURWTZCkB7nXkdvHklSSrYz4oNwCV7
      pKGrXP3XP9Lc+y6yLtJ1tKX4Pwsy/kN11PjrqXDb0ZBoru7a11pUw8PDzM7Ocvz4cXp6etA0
      jd/+9re8//77fPnllwiCwOXLl/nggw/45S9/ic1m2z9hLF5LSp4C6WqaRDLBo/tjBIKh0i0J
      Am6PF2+FG0GUkUUBm82+IyhmL+nt7aWuro6KigoMw2BoaIje3l7C4TB+vx9d13G5XHR3d78W
      wRwWB09JBRBlB0ff6MFtd3PijSMHJdOuGRoa4tixY3R0dGAYBpF3GJieAAAC3klEQVRIhImJ
      CWKxGM3NzaTT6X3Ndm3x+lN6CWQYpBSNCqfG5KN53nnrjYOSa1c4HA6Gh4cJh8OEQiF+/vOf
      09/fj9fr5fbt27z33nsEAgESiQQjIyP09fVZR7IW2yi9KzV0ni8+JZzQ6DrXdUAi7Z4LFy7s
      +Mzv9wNw+fLl7Getm1FqFhb5lFSA+2N3qfS3UAn4fd59EcBIR0nd+p/70vZeYe//B8QK/8sW
      w2IfKKkAvlo/I999wsJqGCqbaK2v2XMBDCWFMv5Pe97uXmI78z5YCvCjpKQCNDY00NTcwJGz
      A4jp/akdZmHxMil5CpTWBM4O/BSHkuDo8VfvFMjC4q+l5Aww/PUgy6EUnqoaOrCyuln8+Cg5
      A5w4fQav20FodYnFlfUXNhZaW+Hx3CJaOk5C0YmEQ+iWAeoHs7CwwO3bt7PGO8MwmJycJBwO
      c+vWLXRdJ5FIsLy8/JIlff0pOQPMzj3l/KWfUl3h3MX5uU5SFXFqYZ4tRkk56kiENzj1RuUe
      ilsexONxDMNgcXGR1tZWxsfHGRoaoq2tjXPnznHt2jXcbjeRSISf/exnL1vc15qSCvBm38Uf
      0JSITIo11UFHrci1u2P0D7wNlPYGNbRX30NUUzWMA/Rk1XWdcDjM2bNnCYVCDA4OoigKHo+H
      u3fvEo/HuXTpEl988cWBetha3qCl0FOMjExyqLmFlOqg9/xFluem8J3qwVbCG1SXXn0PUUmW
      kA7Ik1XTND788ENOnjxJOBxG0zR+8YtfcOPGDRobG7l37x7nzp1jaGiI0dFRLly4cGCVd36M
      3qAvvUSSHlsj9o+XC1zx6uD+T39Gqj164L+7sLCA3+9/ZfyZYusRrv2Pf3nZYpTkb//bv8VT
      s9Noa5VIeg2xXDj2H0sB9onbk4v89z98+bLFKMql0+3813+/05eq3LAUYJ8wDFC1V/cI2KrW
      Y2KlRbEoaywFsChrLAWwKGssBbAoa/4fpjtRqm5Iu30AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      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
      NX4A+Iw1fgD4jDV+APiMNX4A+Iw1fgD4jDV+APiMNX4A+Iw1fgD4jDV+APiMNX4A+Iw1fgD4
      jDV+APiMNX4A+Iw1fgD4jDWvvY1m78kDZDPAxlKenf0Ci6tbdKtHKE6Y25ur/ouyfd4rXjsA
      Vta3eLz9iONSjQ8+/pCD3R1wYsTQUByHiONg2zaWZV25s9dp93302dfiD7f7mgHgsPvkEQsb
      mzSKR1iWhYOAY1tY2IiAIAjn/7tqrtvu++jzddl9H31+E14zAExU1aB4XGB1ZY69p7ssrW3R
      qxVQnCSRZ04IgoAoXv3w4jrtvo8+X4ddx3HeO5//ELuvvSn+s1/96vzq448/BiC1vP5GH+7j
      87bxZ4F8xho/AHzGGj8AfMYaPwB8xho/AHzGGj8AfMYaPwB8xho/AHzGGj8AfMaaoQFgWybV
      Wh1VVW/SHx+fG2VoKsTd3/8jxY7OVDrBn/zpn92kTz4+N8bQFmBhfp5u7RTZDt2kPz4+N8rQ
      ABjIfcKRGO12+yb98fG5UYYGQCKVZWlpiYBg36Q/Pj43yqVjgF6zzI8PHtFs98gvbt60Tz4+
      N8alARAMRZmbnQUxSCT0ahG510EKxwkINoIURBIFFEUBIBqNXr/HPj5XyKUBEEmk6XZaDLQB
      Qq/5yt/kVpmmkyGqVWlqAT64vcLB/gkhDBY//IDnQ2bHca7F4euye5223ze712n7XbN7aQDI
      3SbJ3ByZjExVfnWYkMtN0GpaLG1+zIIxYPvxUyLBDGFsLN7PTdWWZb13Pvub4q/G7qUBIArQ
      KB/T6ivEszMvfxT7B8c0VagELWq1OlNzyyjNEh07xMI1vyj7uuw6joNlWe+Vz9dl9zpflP0u
      2r30X5m6SkdWEASRdCr58kex9ckvz69mZp+9KHsy80Yf7uPztrk0AMLxLP/Rf/xXhENB/6Ar
      nz9qLg2AUMSfzfEZD/xsUJ+xxg8An7HGDwCfscYPAJ+xxg8An7HGDwCfscYPAJ+xxg8An7HG
      DwCfscYPAJ+xxg8An7HGDwCfscYPAJ+x5rV3EbhtPbuONwD6+Fwnr/+i7O3foyaWyQdkivUO
      6ck5uuUjVCfIb379S79J8XmveP0XZa+us9e06A8sPv38U/afPiSeWmAGGdlxiD3bU2qa5pU7
      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
    </thumbnail>
    <thumbnail height='192' name='Traffic count by bike type' width='192'>
      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
      8IF0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Traffic count by memebship' width='192'>
      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
      EWDGd5r/A5f3SujalwDZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Traffic map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='eletric /classic vs memebeship type' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='eletric /classic vs memebeship type (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='end staion map' width='192'>
      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
      GNjtPf9/yu5fsLM+ndcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top end of day station Elec/classic' width='192'>
      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
      9L6oUfAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
